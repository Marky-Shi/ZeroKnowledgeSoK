Sending build context to Docker daemon   16.9kB
Step 1/14 : FROM ubuntu:22.04 as base
 ---> 08d22c0ceb15
Step 2/14 : RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install     -y build-essential cmake git libgmp3-dev libprocps-dev libboost-all-dev libssl-dev libsodium-dev nano
 ---> Using cache
 ---> 4d32015664fe
Step 3/14 : RUN git clone https://github.com/scipr-lab/libiop.git
 ---> Using cache
 ---> b20d7c4d462e
Step 4/14 : WORKDIR libiop
 ---> Using cache
 ---> fa710ce81a60
Step 5/14 : COPY fixes/CMakeLists.txt .
 ---> Using cache
 ---> 21c3f85ca75b
Step 6/14 : COPY fixes/utils.cpp libiop/algebra/utils.cpp
 ---> Using cache
 ---> 6267923e6146
Step 7/14 : COPY fixes/utils.hpp libiop/algebra/utils.hpp
 ---> Using cache
 ---> 0af95f259810
Step 8/14 : COPY test_matmul_snark.cpp /libiop/libiop/tests/snark/test_ligero_snark.cpp
 ---> 77a06fa421ab
Step 9/14 : RUN git config --global url.https://github.com:/.insteadOf git://github.com/
 ---> Running in d96fe324c2f7
Removing intermediate container d96fe324c2f7
 ---> 7d72bb416337
Step 10/14 : RUN git submodule update --init --recursive
 ---> Running in a6c0a73dc047
[91mSubmodule 'depends/ate-pairing' (https://github.com/herumi/ate-pairing.git) registered for path 'depends/ate-pairing'
[0m[91mSubmodule 'depends/benchmark' (https://github.com/google/benchmark.git) registered for path 'depends/benchmark'
[0m[91mSubmodule 'depends/gtest' (https://github.com/google/googletest.git) registered for path 'depends/gtest'
[0m[91mSubmodule 'depends/libff' (https://github.com/scipr-lab/libff.git) registered for path 'depends/libff'
[0m[91mSubmodule 'depends/libfqfft' (https://github.com/scipr-lab/libfqfft.git) registered for path 'depends/libfqfft'
[0m[91mSubmodule 'depends/xbyak' (https://github.com/herumi/xbyak.git) registered for path 'depends/xbyak'
[0m[91mCloning into '/libiop/depends/ate-pairing'...
[0m[91mCloning into '/libiop/depends/benchmark'...
[0m[91mCloning into '/libiop/depends/gtest'...
[0m[91mCloning into '/libiop/depends/libff'...
[0m[91mCloning into '/libiop/depends/libfqfft'...
[0m[91mCloning into '/libiop/depends/xbyak'...
[0mSubmodule path 'depends/ate-pairing': checked out 'e69890125746cdaf25b5b51227d96678f76479fe'
Submodule path 'depends/benchmark': checked out 'a9beffda0b89a6995372100456a4ad894d29b93b'
Submodule path 'depends/gtest': checked out 'a325ad2db5deb623eab740527e559b81c0f39d65'
Submodule path 'depends/libff': checked out '9769030a06b7ab933d6c064db120019decd359f1'
[91mSubmodule 'depends/ate-pairing' (https://github.com/herumi/ate-pairing.git) registered for path 'depends/libff/depends/ate-pairing'
[0m[91mSubmodule 'gtest' (https://github.com/google/googletest.git) registered for path 'depends/libff/depends/gtest'
[0m[91mSubmodule 'depends/xbyak' (https://github.com/herumi/xbyak.git) registered for path 'depends/libff/depends/xbyak'
[0m[91mCloning into '/libiop/depends/libff/depends/ate-pairing'...
[0m[91mCloning into '/libiop/depends/libff/depends/gtest'...
[0m[91mCloning into '/libiop/depends/libff/depends/xbyak'...
[0mSubmodule path 'depends/libff/depends/ate-pairing': checked out 'e69890125746cdaf25b5b51227d96678f76479fe'
Submodule path 'depends/libff/depends/gtest': checked out 'a325ad2db5deb623eab740527e559b81c0f39d65'
Submodule path 'depends/libff/depends/xbyak': checked out 'f0a8f7faa27121f28186c2a7f4222a9fc66c283d'
Submodule path 'depends/libfqfft': checked out '7d460caa27b87574fe0e8144e6a3a66b7bcfe770'
[91mSubmodule 'depends/ate-pairing' (https://github.com/herumi/ate-pairing.git) registered for path 'depends/libfqfft/depends/ate-pairing'
[0m[91mSubmodule 'depends/gtest' (https://github.com/google/googletest.git) registered for path 'depends/libfqfft/depends/gtest'
[0m[91mSubmodule 'depends/libff' (https://github.com/scipr-lab/libff.git) registered for path 'depends/libfqfft/depends/libff'
[0m[91mSubmodule 'depends/xbyak' (https://github.com/herumi/xbyak.git) registered for path 'depends/libfqfft/depends/xbyak'
[0m[91mCloning into '/libiop/depends/libfqfft/depends/ate-pairing'...
[0m[91mCloning into '/libiop/depends/libfqfft/depends/gtest'...
[0m[91mCloning into '/libiop/depends/libfqfft/depends/libff'...
[0m[91mCloning into '/libiop/depends/libfqfft/depends/xbyak'...
[0mSubmodule path 'depends/libfqfft/depends/ate-pairing': checked out 'e69890125746cdaf25b5b51227d96678f76479fe'
Submodule path 'depends/libfqfft/depends/gtest': checked out '3a4cf1a02ef4adc28fccb7eef2b573b14cd59009'
Submodule path 'depends/libfqfft/depends/libff': checked out 'accdf9e761979ac8c95dced219cac0b4ad4a4799'
[91mSubmodule 'depends/ate-pairing' (https://github.com/herumi/ate-pairing.git) registered for path 'depends/libfqfft/depends/libff/depends/ate-pairing'
[0m[91mSubmodule 'gtest' (https://github.com/google/googletest.git) registered for path 'depends/libfqfft/depends/libff/depends/gtest'
[0m[91mSubmodule 'depends/xbyak' (https://github.com/herumi/xbyak.git) registered for path 'depends/libfqfft/depends/libff/depends/xbyak'
[0m[91mCloning into '/libiop/depends/libfqfft/depends/libff/depends/ate-pairing'...
[0m[91mCloning into '/libiop/depends/libfqfft/depends/libff/depends/gtest'...
[0m[91mCloning into '/libiop/depends/libfqfft/depends/libff/depends/xbyak'...
[0mSubmodule path 'depends/libfqfft/depends/libff/depends/ate-pairing': checked out 'e69890125746cdaf25b5b51227d96678f76479fe'
Submodule path 'depends/libfqfft/depends/libff/depends/gtest': checked out 'a325ad2db5deb623eab740527e559b81c0f39d65'
Submodule path 'depends/libfqfft/depends/libff/depends/xbyak': checked out 'f0a8f7faa27121f28186c2a7f4222a9fc66c283d'
Submodule path 'depends/libfqfft/depends/xbyak': checked out 'f0a8f7faa27121f28186c2a7f4222a9fc66c283d'
Submodule path 'depends/xbyak': checked out '811f4959ee0dd36a3ccedd2d4d7460472dd19a14'
Removing intermediate container a6c0a73dc047
 ---> b1361a0e53d7
Step 11/14 : RUN mkdir build && cd build && cmake .. && make
 ---> Running in 5c40da4b9d5b
-- The CXX compiler identification is GNU 11.3.0
-- The C compiler identification is GNU 11.3.0
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found suitable version "1.74.0", minimum required is "1.40") found components: program_options 
[91mCMake Deprecation Warning at depends/gtest/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


[0m[91mCMake Deprecation Warning at depends/gtest/googlemock/CMakeLists.txt:46 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


[0m[91mCMake Deprecation Warning at depends/gtest/googletest/CMakeLists.txt:53 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


[0m-- Found PythonInterp: /usr/bin/python3.10 (found version "3.10.6") 
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
[91mCMake Warning (dev) at depends/benchmark/CMakeLists.txt:15 (option):
  Policy CMP0077 is not set: option() honors normal variables.  Run "cmake
  --help-policy CMP0077" for policy details.  Use the cmake_policy command to
  set the policy and suppress this warning.

  For compatibility with older versions of CMake, option is clearing the
  normal variable 'BENCHMARK_ENABLE_TESTING'.
This warning is for project developers.  Use -Wno-dev to suppress it.

[0m-- Found Git: /usr/bin/git (found version "2.34.1") 
[91m-- git Version: v0.0.0-dirty
[0m[91m-- Version: 0.0.0
[0m-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC
-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL
-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_WINVALID_OFFSETOF
-- Performing Test HAVE_CXX_FLAG_WINVALID_OFFSETOF - Success
-- Performing Test HAVE_CXX_FLAG_WNO_INVALID_OFFSETOF
-- Performing Test HAVE_CXX_FLAG_WNO_INVALID_OFFSETOF - Success
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
[91m-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
[0m[91m-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
[0m[91m-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
[0m[91m-- Performing Test HAVE_POSIX_REGEX
[0m[91m-- Performing Test HAVE_POSIX_REGEX -- success
[0m[91m-- Performing Test HAVE_STEADY_CLOCK
[0m[91m-- Performing Test HAVE_STEADY_CLOCK
[0m[91m-- Performing Test HAVE_STEADY_CLOCK -- success
[0m-- Performing Test BENCHMARK_HAS_O3_FLAG
-- Performing Test BENCHMARK_HAS_O3_FLAG - Success
-- Performing Test BENCHMARK_HAS_CXX03_FLAG
-- Performing Test BENCHMARK_HAS_CXX03_FLAG - Success
-- Performing Test BENCHMARK_HAS_WNO_ODR
-- Performing Test BENCHMARK_HAS_WNO_ODR - Success
[91mCMake Deprecation Warning at depends/libff/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


[0m-- GMP: /usr/lib/x86_64-linux-gnu/libgmp.so, /usr/include/x86_64-linux-gnu
[91mCMake Deprecation Warning at depends/libfqfft/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


[0m-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) 
-- Found sodium: /usr/lib/x86_64-linux-gnu/libsodium.so  
-- Configuring done
-- Generating done
-- Build files have been written to: /libiop/build
[  1%] Building CXX object depends/CMakeFiles/zm.dir/ate-pairing/src/zm.cpp.o
[  1%] Building CXX object depends/CMakeFiles/zm.dir/ate-pairing/src/zm2.cpp.o
[  2%] Linking CXX static library libzm.a
[  2%] Built target zm
[  3%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/benchmark.cc.o
[  3%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/benchmark_register.cc.o
[  4%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/colorprint.cc.o
[  4%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/commandlineflags.cc.o
[  4%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/complexity.cc.o
[  5%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/console_reporter.cc.o
[  5%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/counter.cc.o
[  6%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/csv_reporter.cc.o
[  6%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/json_reporter.cc.o
[  6%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/reporter.cc.o
[  7%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/sleep.cc.o
[  7%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/statistics.cc.o
[  8%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/string_util.cc.o
[  8%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/sysinfo.cc.o
[  8%] Building CXX object depends/benchmark/src/CMakeFiles/benchmark.dir/timers.cc.o
[  9%] Linking CXX static library libbenchmark.a
[  9%] Built target benchmark
[ 10%] Building CXX object depends/benchmark/test/CMakeFiles/output_test_helper.dir/output_test_helper.cc.o
[ 10%] Linking CXX static library liboutput_test_helper.a
[ 10%] Built target output_test_helper
[ 10%] Building CXX object depends/benchmark/test/CMakeFiles/benchmark_test.dir/benchmark_test.cc.o
[ 11%] Linking CXX executable benchmark_test
[ 11%] Built target benchmark_test
[ 12%] Building CXX object depends/benchmark/test/CMakeFiles/filter_test.dir/filter_test.cc.o
[ 12%] Linking CXX executable filter_test
[ 12%] Built target filter_test
[ 13%] Building CXX object depends/benchmark/test/CMakeFiles/options_test.dir/options_test.cc.o
[ 13%] Linking CXX executable options_test
[ 13%] Built target options_test
[ 13%] Building CXX object depends/benchmark/test/CMakeFiles/basic_test.dir/basic_test.cc.o
[ 13%] Linking CXX executable basic_test
[ 13%] Built target basic_test
[ 14%] Building CXX object depends/benchmark/test/CMakeFiles/diagnostics_test.dir/diagnostics_test.cc.o
[ 14%] Linking CXX executable diagnostics_test
[ 14%] Built target diagnostics_test
[ 15%] Building CXX object depends/benchmark/test/CMakeFiles/skip_with_error_test.dir/skip_with_error_test.cc.o
[ 15%] Linking CXX executable skip_with_error_test
[ 15%] Built target skip_with_error_test
[ 15%] Building CXX object depends/benchmark/test/CMakeFiles/donotoptimize_test.dir/donotoptimize_test.cc.o
[ 16%] Linking CXX executable donotoptimize_test
[ 16%] Built target donotoptimize_test
[ 16%] Building CXX object depends/benchmark/test/CMakeFiles/fixture_test.dir/fixture_test.cc.o
[ 17%] Linking CXX executable fixture_test
[ 17%] Built target fixture_test
[ 17%] Building CXX object depends/benchmark/test/CMakeFiles/register_benchmark_test.dir/register_benchmark_test.cc.o
[ 18%] Linking CXX executable register_benchmark_test
[ 18%] Built target register_benchmark_test
[ 18%] Building CXX object depends/benchmark/test/CMakeFiles/map_test.dir/map_test.cc.o
[ 20%] Linking CXX executable map_test
[ 20%] Built target map_test
[ 20%] Building CXX object depends/benchmark/test/CMakeFiles/multiple_ranges_test.dir/multiple_ranges_test.cc.o
[ 20%] Linking CXX executable multiple_ranges_test
[ 20%] Built target multiple_ranges_test
[ 20%] Building CXX object depends/benchmark/test/CMakeFiles/reporter_output_test.dir/reporter_output_test.cc.o
[ 20%] Linking CXX executable reporter_output_test
[ 20%] Built target reporter_output_test
[ 21%] Building CXX object depends/benchmark/test/CMakeFiles/templated_fixture_test.dir/templated_fixture_test.cc.o
[ 21%] Linking CXX executable templated_fixture_test
[ 21%] Built target templated_fixture_test
[ 22%] Building CXX object depends/benchmark/test/CMakeFiles/user_counters_test.dir/user_counters_test.cc.o
[ 22%] Linking CXX executable user_counters_test
[ 22%] Built target user_counters_test
[ 22%] Building CXX object depends/benchmark/test/CMakeFiles/user_counters_tabular_test.dir/user_counters_tabular_test.cc.o
[ 22%] Linking CXX executable user_counters_tabular_test
[ 22%] Built target user_counters_tabular_test
[ 23%] Building CXX object depends/benchmark/test/CMakeFiles/cxx03_test.dir/cxx03_test.cc.o
[ 23%] Linking CXX executable cxx03_test
[ 23%] Built target cxx03_test
[ 23%] Building CXX object depends/benchmark/test/CMakeFiles/complexity_test.dir/complexity_test.cc.o
[ 23%] Linking CXX executable complexity_test
[ 23%] Built target complexity_test
[ 23%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bls12_381/bls12_381_fields.cpp.o
[ 24%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bls12_381/bls12_381_g1.cpp.o
[ 24%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bls12_381/bls12_381_g2.cpp.o
[ 25%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bls12_381/bls12_381_init.cpp.o
[ 25%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bls12_381/bls12_381_pairing.cpp.o
[ 25%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bls12_381/bls12_381_pp.cpp.o
[ 26%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/alt_bn128/alt_bn128_fields.cpp.o
[ 26%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/alt_bn128/alt_bn128_g1.cpp.o
[ 27%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/alt_bn128/alt_bn128_g2.cpp.o
[ 27%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/alt_bn128/alt_bn128_init.cpp.o
[ 27%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/alt_bn128/alt_bn128_pairing.cpp.o
[ 28%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/alt_bn128/alt_bn128_pp.cpp.o
[ 28%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/edwards/edwards_fields.cpp.o
[ 29%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/edwards/edwards_g1.cpp.o
[ 29%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/edwards/edwards_g2.cpp.o
[ 29%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/edwards/edwards_init.cpp.o
[ 30%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/edwards/edwards_pairing.cpp.o
[ 30%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/edwards/edwards_pp.cpp.o
[ 31%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt4/mnt4_fields.cpp.o
[ 31%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt4/mnt4_g1.cpp.o
[ 32%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt4/mnt4_g2.cpp.o
[ 32%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt4/mnt4_init.cpp.o
[ 32%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt4/mnt4_pairing.cpp.o
[ 33%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt4/mnt4_pp.cpp.o
[ 33%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt46_common.cpp.o
[ 34%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt6/mnt6_fields.cpp.o
[ 34%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt6/mnt6_g1.cpp.o
[ 34%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt6/mnt6_g2.cpp.o
[ 35%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt6/mnt6_init.cpp.o
[ 35%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt6/mnt6_pairing.cpp.o
[ 36%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/mnt/mnt6/mnt6_pp.cpp.o
[ 36%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/fields/binary/gf32.cpp.o
[ 36%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/fields/binary/gf64.cpp.o
[ 37%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/fields/binary/gf128.cpp.o
[ 37%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/fields/binary/gf192.cpp.o
[ 38%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/fields/binary/gf256.cpp.o
[ 38%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/common/double.cpp.o
[ 40%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/common/profiling.cpp.o
[ 40%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/common/utils.cpp.o
[ 40%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_fields.cpp.o
[ 41%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_g1.cpp.o
[ 41%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_g2.cpp.o
[ 42%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_gt.cpp.o
[ 42%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_init.cpp.o
[ 42%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_pairing.cpp.o
[ 43%] Building CXX object depends/libff/libff/CMakeFiles/ff.dir/algebra/curves/bn128/bn128_pp.cpp.o
[ 43%] Linking CXX static library libff.a
[ 43%] Built target ff
[ 44%] Building CXX object libiop/CMakeFiles/iop.dir/common/common.cpp.o
[ 44%] Building CXX object libiop/CMakeFiles/iop.dir/bcs/hashing/blake2b.cpp.o
[ 45%] Building CXX object libiop/CMakeFiles/iop.dir/protocols/ldt/ldt_reducer.cpp.o
[ 45%] Building CXX object libiop/CMakeFiles/iop.dir/protocols/ldt/fri/fri_ldt.cpp.o
[ 45%] Building CXX object libiop/CMakeFiles/iop.dir/protocols/ldt/fri/fri_aux.cpp.o
[ 46%] Building CXX object libiop/CMakeFiles/iop.dir/relations/sparse_matrix.cpp.o
[ 46%] Building CXX object libiop/CMakeFiles/iop.dir/iop/utilities/batching.cpp.o
[ 47%] Building CXX object libiop/CMakeFiles/iop.dir/algebra/utils.cpp.o
[ 47%] Linking CXX static library libiop.a
[ 47%] Built target iop
[ 47%] Building CXX object libiop/CMakeFiles/benchmark_gf64.dir/benchmarks/benchmark_gf64.cpp.o
[ 48%] Linking CXX executable benchmark_gf64
[ 48%] Built target benchmark_gf64
[ 49%] Building CXX object libiop/CMakeFiles/benchmark_gf128.dir/benchmarks/benchmark_gf128.cpp.o
[ 49%] Linking CXX executable benchmark_gf128
[ 49%] Built target benchmark_gf128
[ 50%] Building CXX object libiop/CMakeFiles/benchmark_gf192.dir/benchmarks/benchmark_gf192.cpp.o
[ 50%] Linking CXX executable benchmark_gf192
[ 50%] Built target benchmark_gf192
[ 50%] Building CXX object libiop/CMakeFiles/benchmark_edwards.dir/benchmarks/benchmark_edwards.cpp.o
[ 51%] Linking CXX executable benchmark_edwards
[ 51%] Built target benchmark_edwards
[ 51%] Building CXX object libiop/CMakeFiles/benchmark_alt_bn128.dir/benchmarks/benchmark_alt_bn128.cpp.o
[ 52%] Linking CXX executable benchmark_alt_bn128
[ 52%] Built target benchmark_alt_bn128
[ 52%] Building CXX object libiop/CMakeFiles/benchmark_gf256.dir/benchmarks/benchmark_gf256.cpp.o
[ 53%] Linking CXX executable benchmark_gf256
[ 53%] Built target benchmark_gf256
[ 53%] Building CXX object libiop/CMakeFiles/benchmark_hashes.dir/benchmarks/benchmark_hashes.cpp.o
[ 53%] Linking CXX executable benchmark_hashes
[ 53%] Built target benchmark_hashes
[ 53%] Building CXX object libiop/CMakeFiles/benchmark_fft.dir/benchmarks/benchmark_fft.cpp.o
[ 53%] Linking CXX executable benchmark_fft
[ 53%] Built target benchmark_fft
[ 54%] Building CXX object libiop/CMakeFiles/benchmark_lagrange.dir/benchmarks/benchmark_lagrange.cpp.o
[ 54%] Linking CXX executable benchmark_lagrange
[ 54%] Built target benchmark_lagrange
[ 55%] Building CXX object libiop/CMakeFiles/benchmark_polynomials.dir/benchmarks/benchmark_polynomials.cpp.o
[ 55%] Linking CXX executable benchmark_polynomials
[ 55%] Built target benchmark_polynomials
[ 55%] Building CXX object depends/gtest/googlemock/gtest/CMakeFiles/gtest.dir/src/gtest-all.cc.o
[ 55%] Linking CXX static library libgtest.a
[ 55%] Built target gtest
[ 56%] Building CXX object depends/gtest/googlemock/gtest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o
[ 56%] Linking CXX static library libgtest_main.a
[ 56%] Built target gtest_main
[ 57%] Building CXX object libiop/CMakeFiles/benchmark_sumcheck.dir/benchmarks/benchmark_sumcheck.cpp.o
[ 57%] Linking CXX executable benchmark_sumcheck
[ 57%] Built target benchmark_sumcheck
[ 57%] Building CXX object libiop/CMakeFiles/benchmark_vector_op.dir/benchmarks/benchmark_vector_op.cpp.o
[ 58%] Linking CXX executable benchmark_vector_op
[ 58%] Built target benchmark_vector_op
[ 60%] Building CXX object libiop/CMakeFiles/instrument_algebra.dir/profiling/instrument_algebra.cpp.o
[ 60%] Linking CXX executable instrument_algebra
[ 60%] Built target instrument_algebra
[ 60%] Building CXX object libiop/CMakeFiles/instrument_aurora_snark.dir/profiling/instrument_aurora_snark.cpp.o
[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::gf64>::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::gf128>::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf128>& libiop::FRI_protocol_parameters<libff::gf128>::operator=(const libiop::FRI_protocol_parameters<libff::gf128>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf128>& libiop::aurora_iop_parameters<libff::gf128>::operator=(libiop::aurora_iop_parameters<libff::gf128>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf128>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf128>::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf128; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::gf192>::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf192>& libiop::FRI_protocol_parameters<libff::gf192>::operator=(const libiop::FRI_protocol_parameters<libff::gf192>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf192>& libiop::aurora_iop_parameters<libff::gf192>::operator=(libiop::aurora_iop_parameters<libff::gf192>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf192>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf192>::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf192; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::gf256>::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
In member function 'libiop::FRI_protocol_parameters<libff::gf256>& libiop::FRI_protocol_parameters<libff::gf256>::operator=(const libiop::FRI_protocol_parameters<libff::gf256>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf256>& libiop::aurora_iop_parameters<libff::gf256>::operator=(libiop::aurora_iop_parameters<libff::gf256>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf256>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf256>::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/profiling/instrument_aurora_snark.cpp:20:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf256; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[ 61%] Linking CXX executable instrument_aurora_snark
[ 61%] Built target instrument_aurora_snark
[ 61%] Building CXX object libiop/CMakeFiles/instrument_fractal_snark.dir/profiling/instrument_fractal_snark.cpp.o
[ 62%] Linking CXX executable instrument_fractal_snark
[ 62%] Built target instrument_fractal_snark
[ 62%] Building CXX object libiop/CMakeFiles/instrument_fri_snark.dir/profiling/instrument_fri_snark.cpp.o
[ 62%] Linking CXX executable instrument_fri_snark
[ 62%] Built target instrument_fri_snark
[ 63%] Building CXX object libiop/CMakeFiles/instrument_ligero_snark.dir/profiling/instrument_ligero_snark.cpp.o
[ 63%] Linking CXX executable instrument_ligero_snark
[ 63%] Built target instrument_ligero_snark
[ 63%] Building CXX object libiop/CMakeFiles/test_exponentiation.dir/tests/algebra/test_exponentiation.cpp.o
[ 63%] Linking CXX executable test_exponentiation
[ 63%] Built target test_exponentiation
[ 64%] Building CXX object libiop/CMakeFiles/test_fft.dir/tests/algebra/test_fft.cpp.o
[ 64%] Linking CXX executable test_fft
[ 64%] Built target test_fft
[ 64%] Building CXX object libiop/CMakeFiles/test_lagrange.dir/tests/algebra/test_lagrange.cpp.o
[ 64%] Linking CXX executable test_lagrange
[ 64%] Built target test_lagrange
[ 64%] Building CXX object libiop/CMakeFiles/test_merkle_tree.dir/tests/bcs/test_merkle_tree.cpp.o
[ 65%] Linking CXX executable test_merkle_tree
[ 65%] Built target test_merkle_tree
[ 66%] Building CXX object libiop/CMakeFiles/test_linearized_polynomial.dir/tests/algebra/test_linearized_polynomial.cpp.o
[ 66%] Linking CXX executable test_linearized_polynomial
[ 66%] Built target test_linearized_polynomial
[ 66%] Building CXX object libiop/CMakeFiles/test_vanishing_polynomial.dir/tests/algebra/test_vanishing_polynomial.cpp.o
[ 67%] Linking CXX executable test_vanishing_polynomial
[ 67%] Built target test_vanishing_polynomial
[ 68%] Building CXX object libiop/CMakeFiles/test_lagrange_polynomial.dir/tests/algebra/test_lagrange_polynomial.cpp.o
[ 68%] Linking CXX executable test_lagrange_polynomial
[ 68%] Built target test_lagrange_polynomial
[ 69%] Building CXX object libiop/CMakeFiles/test_bivariate_embedding.dir/tests/algebra/test_bivariate_embedding.cpp.o
[ 69%] Linking CXX executable test_bivariate_embedding
[ 69%] Built target test_bivariate_embedding
[ 70%] Building CXX object libiop/CMakeFiles/test_successor_ordering.dir/tests/algebra/test_successor_ordering.cpp.o
[91mIn file included from /libiop/./libiop/algebra/field_subset/field_subset.hpp:12,
                 from /libiop/./libiop/algebra/fft.hpp:15,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:14:
In constructor 'libiop::linear_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::linear_subspace(libiop::linear_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::affine_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::affine_subspace(libiop::affine_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/field_subset/subspace.hpp:51:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/field_subset/subspace.hpp:18:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::subspace_.libiop::affine_subspace<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::<unnamed>.libiop::linear_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::is_standard_basis_' may be used uninitialized [-Wmaybe-uninitialized]
   18 | class linear_subspace {
      |       ^~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_truncated_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_truncated_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vp_degree_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/fft.hpp:15,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:14:
In constructor 'libiop::field_subset<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::field_subset(libiop::field_subset<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/field_subset/field_subset.hpp:26:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::S_.libiop::field_subset<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   26 | class field_subset {
      |       ^~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_succes[0m[91msor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vp_degree_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:12,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
In constructor 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::is_normalized_' may be used uninitialized [-Wmaybe-uninitialized]
   38 | class lagrange_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/algebra/field_subset/field_subset.hpp:12,
                 from /libiop/./libiop/algebra/fft.hpp:15,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:14:
In constructor 'libiop::linear_subspace<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::linear_subspace(libiop::linear_subspace<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::affine_subspace<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::affine_subspace(libiop::affine_subspace<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/field_subset/subspace.hpp:51:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/field_subset/subspace.hpp:18:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::subspace_.libiop::affine_subspace<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::<unnamed>.libiop::linear_subspace<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::is_standard_basis_' may be used uninitialized [-Wmaybe-uninitialized]
   18 | class linear_subspace {
      |       ^~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::Z_S_truncated_.libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::Z_S_truncated_.libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::vp_degree_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/fft.hpp:15,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:14:
In constructor 'libiop::field_subset<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::field_subset(libiop::field_subset<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/field_subset/field_subset.hpp:26:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::S_.libiop::field_subset<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   26 | class field_subset {
      |       ^~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& .[0m[91m..) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::Z_S_.libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:16:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::Z_S_.libiop::vanishing_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::vp_degree_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:12,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
In constructor 'libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<4, (const libff::bigint<4>&)&libff::alt_bn128_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::is_normalized_' may be used uninitialized [-Wmaybe-uninitialized]
   38 | class lagrange_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/libiop/tests/algebra/test_successor_ordering.cpp:17:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[ 70%] Linking CXX executable test_successor_ordering
[ 70%] Built target test_successor_ordering
[ 70%] Building CXX object libiop/CMakeFiles/test_algebra_utils.dir/tests/algebra/test_algebra_utils.cpp.o
[ 71%] Linking CXX executable test_algebra_utils
[ 71%] Built target test_algebra_utils
[ 71%] Building CXX object libiop/CMakeFiles/test_iop.dir/tests/iop/test_iop.cpp.o
[ 72%] Linking CXX executable test_iop
[ 72%] Built target test_iop
[ 72%] Building CXX object libiop/CMakeFiles/test_iop_query_position.dir/tests/iop/test_iop_query_position.cpp.o
[ 73%] Linking CXX executable test_iop_query_position
[ 73%] Built target test_iop_query_position
[ 73%] Building CXX object libiop/CMakeFiles/test_aurora_protocol.dir/tests/protocols/test_aurora_protocol.cpp.o
[ 74%] Linking CXX executable test_aurora_protocol
[ 74%] Built target test_aurora_protocol
[ 74%] Building CXX object libiop/CMakeFiles/test_r1cs_to_lincheck_reduction.dir/tests/protocols/test_r1cs_to_lincheck_reduction.cpp.o
[ 75%] Linking CXX executable test_r1cs_to_lincheck_reduction
[ 75%] Built target test_r1cs_to_lincheck_reduction
[ 75%] Building CXX object libiop/CMakeFiles/test_basic_lincheck.dir/tests/protocols/test_basic_lincheck.cpp.o
[ 75%] Linking CXX executable test_basic_lincheck
[ 75%] Built target test_basic_lincheck
[ 75%] Building CXX object libiop/CMakeFiles/test_boundary_constraint.dir/tests/protocols/test_boundary_constraint.cpp.o
[ 76%] Linking CXX executable test_boundary_constraint
[ 76%] Built target test_boundary_constraint
[ 77%] Building CXX object libiop/CMakeFiles/test_holographic_lincheck.dir/tests/protocols/test_holographic_lincheck.cpp.o
[ 77%] Linking CXX executable test_holographic_lincheck
[ 77%] Built target test_holographic_lincheck
[ 77%] Building CXX object libiop/CMakeFiles/test_sumcheck.dir/tests/protocols/test_sumcheck.cpp.o
[ 78%] Linking CXX executable test_sumcheck
[ 78%] Built target test_sumcheck
[ 78%] Building CXX object libiop/CMakeFiles/test_direct_ldt.dir/tests/protocols/test_direct_ldt.cpp.o
[ 80%] Linking CXX executable test_direct_ldt
[ 80%] Built target test_direct_ldt
[ 80%] Building CXX object libiop/CMakeFiles/test_fri.dir/tests/protocols/test_fri.cpp.o
[ 81%] Linking CXX executable test_fri
[ 81%] Built target test_fri
[ 81%] Building CXX object libiop/CMakeFiles/test_fri_aux.dir/tests/protocols/test_fri_aux.cpp.o
[ 81%] Linking CXX executable test_fri_aux
[ 81%] Built target test_fri_aux
[ 82%] Building CXX object libiop/CMakeFiles/test_fri_optimizer.dir/tests/protocols/test_fri_optimizer.cpp.o
[ 82%] Linking CXX executable test_fri_optimizer
[ 82%] Built target test_fri_optimizer
[ 83%] Building CXX object libiop/CMakeFiles/test_fractal_protocol.dir/tests/protocols/test_fractal_protocol.cpp.o
[ 83%] Linking CXX executable test_fractal_protocol
[ 83%] Built target test_fractal_protocol
[ 83%] Building CXX object libiop/CMakeFiles/test_ligero_interleaved_lincheck_et.dir/tests/protocols/test_ligero_interleaved_lincheck_et.cpp.o
[ 84%] Linking CXX executable test_ligero_interleaved_lincheck_et
[ 84%] Built target test_ligero_interleaved_lincheck_et
[ 84%] Building CXX object libiop/CMakeFiles/test_ligero_interleaved_lincheck_ot.dir/tests/protocols/test_ligero_interleaved_lincheck_ot.cpp.o
[ 85%] Linking CXX executable test_ligero_interleaved_lincheck_ot
[ 85%] Built target test_ligero_interleaved_lincheck_ot
[ 86%] Building CXX object libiop/CMakeFiles/test_ligero_protocol.dir/tests/protocols/test_ligero_protocol.cpp.o
[ 86%] Linking CXX executable test_ligero_protocol
[ 86%] Built target test_ligero_protocol
[ 86%] Building CXX object libiop/CMakeFiles/test_ligero_interleaved_rowcheck.dir/tests/protocols/test_ligero_interleaved_rowcheck.cpp.o
[ 86%] Linking CXX executable test_ligero_interleaved_rowcheck
[ 86%] Built target test_ligero_interleaved_rowcheck
[ 87%] Building CXX object libiop/CMakeFiles/test_ldt_reducer.dir/tests/protocols/test_ldt_reducer.cpp.o
[ 87%] Linking CXX executable test_ldt_reducer
[ 87%] Built target test_ldt_reducer
[ 88%] Building CXX object libiop/CMakeFiles/test_fractal_indexer.dir/tests/protocols/test_fractal_indexer.cpp.o
[ 88%] Linking CXX executable test_fractal_indexer
[ 88%] Built target test_fractal_indexer
[ 88%] Building CXX object libiop/CMakeFiles/test_rational_linear_combination.dir/tests/protocols/test_rational_linear_combination.cpp.o
[ 89%] Linking CXX executable test_rational_linear_combination
[ 89%] Built target test_rational_linear_combination
[ 89%] Building CXX object libiop/CMakeFiles/test_rational_sumcheck.dir/tests/protocols/test_rational_sumcheck.cpp.o
[ 90%] Linking CXX executable test_rational_sumcheck
[ 90%] Built target test_rational_sumcheck
[ 90%] Building CXX object libiop/CMakeFiles/test_rowcheck.dir/tests/protocols/test_rowcheck.cpp.o
[ 90%] Linking CXX executable test_rowcheck
[ 90%] Built target test_rowcheck
[ 91%] Building CXX object libiop/CMakeFiles/test_r1cs.dir/tests/relations/test_r1cs.cpp.o
[ 91%] Linking CXX executable test_r1cs
[ 91%] Built target test_r1cs
[ 91%] Building CXX object libiop/CMakeFiles/test_identity_matrices.dir/tests/relations/test_identity_matrices.cpp.o
[91mIn file included from /libiop/./libiop/algebra/field_subset/field_subset.hpp:12,
                 from /libiop/./libiop/algebra/polynomials/polynomial.hpp:14,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:9:
In constructor 'libiop::linear_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::linear_subspace(libiop::linear_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::affine_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::affine_subspace(libiop::affine_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/field_subset/subspace.hpp:51:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/field_subset/subspace.hpp:18:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::subspace_.libiop::affine_subspace<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::<unnamed>.libiop::linear_subspace<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::is_standard_basis_' may be used uninitialized [-Wmaybe-uninitialized]
   18 | class linear_subspace {
      |       ^~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/libiop/tests/relations/test_identity_matrices.cpp:10:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_truncated_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/libiop/tests/relations/test_identity_matrices.cpp:10:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_truncated_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vp_degree_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/polynomials/polynomial.hpp:14,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:9:
In constructor 'libiop::field_subset<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::field_subset(libiop::field_subset<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/field_subset/field_subset.hpp:26:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::S_.libiop::field_subset<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   26 | class field_subset {
      |       ^~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/libiop/tests/relations/test_identity_matrices.cpp:10:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::type_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/libiop/tests/relations/test_identity_matrices.cpp:10:
In constructor 'libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vanishing_polynomial(libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7,
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/vanishing_polynomial.hpp:29:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::Z_S_.libiop::vanishing_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::vp_degree_' may be used uninitialized [-Wmaybe-uninitialized]
   29 | class vanishing_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:12,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
In constructor 'libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::lagrange_polynomial(libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::additive_successor_polynomial(libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:83:7,
    inlined from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/ext/new_allocator.h:162:4,
    inlined from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/alloc_traits.h:516:17,
    inlined from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:519:39,
    inlined from 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:650:16,
    inlined from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]' at /usr/include/c++/11/bits/shared_ptr_base.h:1342:14,
    inlined from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}; _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >]' at /usr/include/c++/11/bits/shared_ptr.h:409:59,
    inlined from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Alloc = std::allocator<libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> > >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:863:39,
    inlined from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >; _Args = {libiop::additive_successor_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >}]' at /usr/include/c++/11/bits/shared_ptr.h:879:42,
    inlined from 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]' at /libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:48:
/libiop/./libiop/algebra/polynomials/lagrange_polynomial.hpp:38:7: warning: '<unnamed>.libiop::additive_successor_polynomial<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::lagrange_indicator_polynomial_.libiop::lagrange_polynomial<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::is_normalized_' may be used uninitialized [-Wmaybe-uninitialized]
   38 | class lagrange_polynomial : public polynomial_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/algebra/trace_embedding/successor_ordering.hpp:141,
                 from /libiop/./libiop/relations/succinct_matrices/identity.hpp:13,
                 from /libiop/libiop/tests/relations/test_identity_matrices.cpp:12:
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc: In member function 'std::shared_ptr<libiop::piecewise_polynomial_base<FieldT> > libiop::additive_successor_polynomial<FieldT>::compose(std::shared_ptr<libiop::polynomial_base<FieldT> >) const [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>]':
/libiop/./libiop/algebra/trace_embedding/additive_successor_ordering.tcc:237:9: note: '<anonymous>' declared here
  237 |         additive_successor_polynomial<FieldT>());
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[ 92%] Linking CXX executable test_identity_matrices
[ 92%] Built target test_identity_matrices
[ 92%] Building CXX object libiop/CMakeFiles/test_poseidon.dir/tests/snark/test_poseidon.cpp.o
[ 92%] Linking CXX executable test_poseidon
[ 92%] Built target test_poseidon
[ 93%] Building CXX object libiop/CMakeFiles/test_pow.dir/tests/snark/test_pow.cpp.o
[ 93%] Linking CXX executable test_pow
[ 93%] Built target test_pow
[ 94%] Building CXX object libiop/CMakeFiles/test_bcs_transformation.dir/tests/bcs/test_bcs_transformation.cpp.o
[ 94%] Linking CXX executable test_bcs_transformation
[ 94%] Built target test_bcs_transformation
[ 95%] Building CXX object libiop/CMakeFiles/test_serialization.dir/tests/snark/test_serialization.cpp.o
[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_serialization.cpp:18:
In member function 'libiop::aurora_iop_parameters<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>; hash_type = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))> >::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_serialization.cpp:18:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>; hash_type = libff::Fp_model<4, ((const libff::bigint<4>&)(& libff::alt_bn128_modulus_r))>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[ 95%] Linking CXX executable test_serialization
[ 95%] Built target test_serialization
[ 95%] Building CXX object libiop/CMakeFiles/test_aurora_snark.dir/tests/snark/test_aurora_snark.cpp.o
[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::gf64>::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::gf64>& libiop::FRI_protocol_parameters<libff::gf64>::operator=(const libiop::FRI_protocol_parameters<libff::gf64>&)',
    inlined from 'libiop::aurora_iop_parameters<libff::gf64>& libiop::aurora_iop_parameters<libff::gf64>::operator=(libiop::aurora_iop_parameters<libff::gf64>&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::gf64>::FRI_params_.libiop::FRI_protocol_parameters<libff::gf64>::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::gf64; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)',
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/aurora_iop.hpp:25:7: warning: '<anonymous>.libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::query_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   25 | class aurora_iop_parameters {
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::target_interactive_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::target_query_security_parameter_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::soundness_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::poly_degree_bound_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::codeword_domain_dim_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::RS_extra_dimensions_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[91mIn file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/protocols/aurora_iop.hpp:18,
                 from /libiop/./libiop/snark/aurora_snark.hpp:15,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
In member function 'libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(const libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&)',
    inlined from 'libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >& libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::operator=(libiop::aurora_iop_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >&&)' at /libiop/./libiop/protocols/aurora_iop.hpp:25:7,
    inlined from 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]' at /libiop/./libiop/snark/aurora_snark.tcc:76:23:
/libiop/./libiop/protocols/ldt/fri/fri_ldt.hpp:55:7: warning: '<unnamed>.libiop::aurora_iop_parameters<libff::Fp_model<3, (const libff::bigint<3>&)&libff::edwards_modulus_r> >::FRI_params_.libiop::FRI_protocol_parameters<libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))> >::field_type_' may be used uninitialized [-Wmaybe-uninitialized]
   55 | class FRI_protocol_parameters : public multi_LDT_parameter_base<FieldT> {
      |       ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /libiop/./libiop/snark/aurora_snark.hpp:91,
                 from /libiop/libiop/tests/snark/test_aurora_snark.cpp:7:
/libiop/./libiop/snark/aurora_snark.tcc: In member function 'void libiop::aurora_snark_parameters<FieldT, hash_type>::initialize_iop_params() [with FieldT = libff::Fp_model<3, ((const libff::bigint<3>&)(& libff::edwards_modulus_r))>; hash_type = std::__cxx11::basic_string<char>]':
/libiop/./libiop/snark/aurora_snark.tcc:76:25: note: '<anonymous>' declared here
   76 |     this->iop_params_ = aurora_iop_parameters<FieldT>(
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         this->security_parameter_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         this->bcs_params_.pow_params_.work_parameter(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |         this->RS_extra_dimensions_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |         this->make_zk_,
      |         ~~~~~~~~~~~~~~~  
   81 |         this->domain_type_,
      |         ~~~~~~~~~~~~~~~~~~~
   82 |         this->num_constraints_,
      |         ~~~~~~~~~~~~~~~~~~~~~~~
   83 |         this->num_variables_);
      |         ~~~~~~~~~~~~~~~~~~~~~
[0m[ 96%] Linking CXX executable test_aurora_snark
[ 96%] Built target test_aurora_snark
[ 96%] Building CXX object libiop/CMakeFiles/test_fractal_snark.dir/tests/snark/test_fractal_snark.cpp.o
[ 97%] Linking CXX executable test_fractal_snark
[ 97%] Built target test_fractal_snark
[ 98%] Building CXX object libiop/CMakeFiles/test_ligero_snark.dir/tests/snark/test_ligero_snark.cpp.o
[ 98%] Linking CXX executable test_ligero_snark
[ 98%] Built target test_ligero_snark
[ 98%] Building CXX object libiop/CMakeFiles/test_linking.dir/tests/snark/test_linking.cpp.o
[100%] Linking CXX executable test_linking
[100%] Built target test_linking
Removing intermediate container 5c40da4b9d5b
 ---> 479748b7e5e5
Step 12/14 : WORKDIR build
 ---> Running in 1559793aaefd
Removing intermediate container 1559793aaefd
 ---> 5392f6757bb6
Step 13/14 : ADD "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" skipcache


 ---> 4c971929e56f
Step 14/14 : RUN ./libiop/test_ligero_snark
 ---> Running in 1be22d156bff
Running main() from gtest_main.cc
[==========] Running 2 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 1 test from InterleavedR1CSSnarkTest
[ RUN      ] InterleavedR1CSSnarkTest.SimpleTest
(enter) Ligero SNARK prover                	[             ]	(1692993231.7068s x0.00 from start)

Ligero IOP parameters
  * target security parameter = 128
  * achieved security parameter = 129.1
  * encoded ligero interactions = 3
  * encoded ligero queries = 192
  * encoded ligero absolute proximity parameter = 16383
  * encoded ligero fractional proximity parameter = 0.124992
  * RS extra dimensions = 2
  * systematic domain dim = 15
  * codeword domain dim = 17
  * num oracles for input = 9
  * num oracle vectors = 9
  * make zk = false
  * domain type = affine subspace

LDT instance reducer parameters
  * soundness type = proven
  * target interactive soundness error (bits) = 130
  * achieved interactive soundness error (bits) = 141.0
  * codeword domain dim = 17
  * max tested degree bound = 32768
  * max constraint degree bound = 32768
  * absolute proximity parameter = 32767
  * fractional proximity parameter = 0.249992
  * num output LDT instances = 3

Direct LDT parameters
  * target query soundness error (bits): 130
  * achieved query soundness error (bits): 130.0
  * codeword domain dimension: 17
  * RS extra dimensions: 2
  * absolute proximity parameter: 16383
  * fractional proximity parameter: 0.124992
  * number of queries: 675

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  num oracles for vectors / R1CS constraints (m_2): 9
  (enter) Submit witness oracles             	[             ]	(1692993231.8903s x0.00 from start)
    (enter) Generate extended witness and auxiliary witness	[             ]	(1692993231.8903s x0.00 from start)
    (leave) Generate extended witness and auxiliary witness	[0.0005s x1.00]	(1692993231.8908s x0.00 from start)
    (enter) Perform matrix multiplications     	[             ]	(1692993231.8908s x0.00 from start)
    (leave) Perform matrix multiplications     	[0.0235s x1.00]	(1692993231.9143s x0.00 from start)
    (enter) Submit input oracles               	[             ]	(1692993231.9143s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993231.9144s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993231.9203s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993231.9203s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993231.9490s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993231.9491s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993231.9550s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993231.9550s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993231.9838s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993231.9838s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993231.9897s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993231.9897s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993232.0184s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.0185s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.0244s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.0244s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993232.0532s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.0533s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.0592s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.0592s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.0882s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.0882s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.0942s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.0942s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993232.1231s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.1231s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.1291s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.1291s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993232.1582s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.1582s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.1642s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.1642s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.1932s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.1932s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.1992s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.1992s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.2281s x0.00 from start)
    (leave) Submit input oracles               	[0.3138s x1.00]	(1692993232.2282s x0.00 from start)
    (enter) Submit vector oracles              	[             ]	(1692993232.2282s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.2282s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.2341s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.2341s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993232.2634s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.2634s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.2693s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.2694s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993232.2985s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.2985s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.3044s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.3045s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.3335s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.3336s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.3395s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.3395s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.3685s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.3686s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.3745s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.3745s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993232.4036s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.4036s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.4096s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.4096s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993232.4385s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.4386s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.4445s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.4445s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.4735s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.4735s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.4795s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.4795s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.5085s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.5085s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.5145s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.5145s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993232.5436s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.5436s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.5496s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.5496s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.5786s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.5786s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.5845s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.5846s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.6135s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.6136s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.6195s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.6195s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993232.6485s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.6485s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.6545s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.6545s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993232.6834s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.6835s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.6894s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.6894s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.7184s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.7184s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.7244s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.7244s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.7534s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.7534s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993232.7594s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.7594s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993232.7883s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.7884s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.7943s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.7943s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.8233s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.8233s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.8292s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.8292s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.8583s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.8583s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.8642s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.8643s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.8933s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.8933s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.8992s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.8992s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.9282s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.9282s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.9341s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.9341s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.9632s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.9632s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993232.9691s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993232.9691s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993232.9981s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993232.9982s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.0041s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.0041s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993233.0331s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.0331s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.0390s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.0391s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993233.0680s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.0681s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.0740s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.0740s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993233.1031s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.1031s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.1090s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.1090s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993233.1381s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.1381s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.1440s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.1440s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993233.1730s x0.00 from start)
    (leave) Submit vector oracles              	[0.9449s x1.00]	(1692993233.1730s x0.00 from start)
  (leave) Submit witness oracles             	[1.2827s x1.00]	(1692993233.1730s x0.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(1692993233.1730s x0.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x0.88]	(1692993233.1730s x0.00 from start)
  (enter) Finish prover round                	[             ]	(1692993233.1730s x0.00 from start)
    (enter) Construct Merkle tree              	[             ]	(1692993233.1730s x0.00 from start)
    (leave) Construct Merkle tree              	[0.1112s x1.00]	(1692993233.2843s x0.00 from start)
  (leave) Finish prover round                	[0.6955s x1.00]	(1692993233.8686s x0.00 from start)
  (enter) pow                                	[             ]	(1692993233.8686s x0.00 from start)
  (leave) pow                                	[0.0000s x0.98]	(1692993233.8686s x0.00 from start)
  (enter) Calculating and submitting proof   	[             ]	(1692993233.8686s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck A	[             ]	(1692993233.8716s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993233.8737s x0.00 from start)
        (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.8738s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 32768
        (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.8797s x0.00 from start)
        (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.8797s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 131072
        (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993233.9086s x0.00 from start)
      (leave) Input consistency                  	[0.0391s x1.00]	(1692993233.9128s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.9209s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993233.9269s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.9269s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0293s x1.00]	(1692993233.9562s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.9568s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.9627s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.9627s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993233.9917s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993233.9923s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993233.9983s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993233.9983s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.0271s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.0277s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.0336s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.0336s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993234.0626s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.0632s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.0691s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.0692s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.0980s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.0986s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.1045s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.1045s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.1334s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.1340s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.1399s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.1399s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.1687s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.1693s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.1752s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.1752s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.2040s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.2046s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.2105s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.2106s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.2394s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.2400s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.2459s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.2459s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993234.2746s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.2751s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.2811s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.2811s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.3099s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.3106s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0064s x1.00]	(1692993234.3171s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.3171s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.3459s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.3464s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.3523s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.3523s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993234.3813s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.3818s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.3877s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.3877s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.4167s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.4172s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.4231s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.4231s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.4520s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.4526s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.4585s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.4585s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.4873s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.4878s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.4937s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.4938s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993234.5228s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.5233s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.5292s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.5292s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.5581s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.5586s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0286s x1.00]	(1692993234.5873s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.5941s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993234.6000s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.6000s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993234.6292s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.6298s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.6357s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.6357s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993234.6648s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.6654s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.6713s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.6713s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.7001s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.7007s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.7066s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.7066s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.7356s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.7362s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.7421s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.7421s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993234.7712s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.7718s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.7777s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.7777s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993234.8065s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.8071s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.8130s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.8130s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993234.8421s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.8427s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.8486s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.8486s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.8775s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.8781s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.8840s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.8840s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993234.9130s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.9135s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.9195s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.9195s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.9483s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.9489s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.9548s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.9548s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993234.9837s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993234.9843s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993234.9902s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993234.9902s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.0191s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.0196s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.0255s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.0255s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.0543s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.0549s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.0608s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.0608s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993235.0897s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.0902s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.0962s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.0962s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.1250s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.1255s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.1315s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.1315s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.1603s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.1608s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.1667s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.1667s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.1955s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.1960s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.2019s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.2019s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.2308s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.2313s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993235.2601s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.2668s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.2727s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.2727s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993235.3019s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.3025s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.3084s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.3084s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993235.3372s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.3378s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.3437s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.3437s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993235.3728s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.3734s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.3793s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.3794s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.4082s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.4088s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.4147s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.4147s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.4436s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.4442s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.4501s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.4501s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.4790s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.4796s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.4855s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.4855s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.5144s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.5150s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.5209s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.5209s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.5497s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.5503s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.5562s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.5562s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993235.5853s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.5859s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.5918s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.5918s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993235.6210s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.6215s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.6274s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.6274s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.6562s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.6568s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.6627s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.6627s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993235.6918s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.6923s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.6982s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.6982s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.7271s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.7276s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.7336s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.7336s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.7625s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.7630s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.7689s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.7689s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993235.7977s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.7983s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.8042s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.8042s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993235.8329s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.8334s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.8393s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.8393s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.8682s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.8687s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.8747s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.8747s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.9036s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.9041s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993235.9328s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck A	[2.0613s x1.00]	(1692993235.9329s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck B	[             ]	(1692993235.9329s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993235.9335s x0.00 from start)
        (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.9335s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 32768
        (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.9395s x0.00 from start)
        (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.9395s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 131072
        (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993235.9684s x0.00 from start)
      (leave) Input consistency                  	[0.0360s x1.00]	(1692993235.9695s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993235.9764s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993235.9823s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993235.9823s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.0112s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.0118s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.0177s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.0177s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993236.0465s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.0471s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.0531s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.0531s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.0820s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.0826s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.0885s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.0885s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993236.1172s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.1178s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.1238s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.1238s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993236.1527s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.1534s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.1593s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.1593s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993236.1883s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.1889s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.1948s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.1948s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993236.2239s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.2245s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993236.2305s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.2305s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.2594s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.2601s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.2660s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.2660s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993236.2951s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.2957s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.3016s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.3016s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993236.3304s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.3309s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.3369s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.3369s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993236.3656s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.3661s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.3720s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.3721s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993236.4013s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.4018s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.4077s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.4077s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993236.4368s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.4373s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.4432s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.4432s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.4721s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.4726s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.4786s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.4786s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993236.5077s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.5082s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993236.5142s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.5142s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993236.5433s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.5438s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.5497s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.5497s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993236.5788s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.5793s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.5852s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.5853s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.6142s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.6147s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0288s x1.00]	(1692993236.6435s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.6502s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.6562s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.6562s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993236.6852s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.6858s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.6917s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.6917s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.7206s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.7212s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993236.7272s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.7272s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.7561s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.7567s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.7626s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.7626s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.7915s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.7921s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.7980s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.7980s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993236.8269s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.8275s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.8334s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.8335s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993236.8623s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.8629s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.8688s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.8688s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993236.8979s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.8985s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993236.9045s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.9045s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993236.9336s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.9342s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993236.9401s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.9401s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993236.9691s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993236.9696s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993236.9756s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993236.9756s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.0045s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.0050s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.0109s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.0109s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.0398s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.0403s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.0463s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.0463s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.0753s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.0759s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.0818s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.0818s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993237.1106s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.1112s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.1171s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.1171s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.1462s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.1467s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.1527s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.1527s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.1818s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.1823s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.1882s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.1882s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.2173s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.2178s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.2238s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.2238s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993237.2526s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.2531s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.2590s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.2591s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.2882s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.2887s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993237.3174s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.3241s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.3301s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.3301s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.3590s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.3596s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.3655s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.3656s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.3944s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.3950s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.4009s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.4010s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.4298s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.4304s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.4364s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.4364s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.4653s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.4659s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.4718s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.4718s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993237.5008s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.5014s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.5073s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.5074s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.5363s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.5369s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.5428s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.5428s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993237.5718s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.5724s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.5784s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.5784s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993237.6072s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.6078s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.6137s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.6137s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.6426s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.6432s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.6491s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.6491s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.6782s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.6787s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.6847s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.6847s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993237.7135s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.7140s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.7200s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.7200s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.7489s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.7494s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.7553s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.7553s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993237.7843s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.7848s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993237.7908s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.7908s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993237.8198s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.8203s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993237.8263s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.8263s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.8552s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.8557s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.8616s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.8616s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993237.8906s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.8911s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.8970s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.8971s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993237.9260s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.9265s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.9324s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.9324s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993237.9615s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.9621s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0290s x1.00]	(1692993237.9911s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck B	[2.0582s x1.00]	(1692993237.9911s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck C	[             ]	(1692993237.9911s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993237.9917s x0.00 from start)
        (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993237.9918s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 32768
        (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993237.9977s x0.00 from start)
        (enter) Call to additive_FFT_wrapper       	[             ]	(1692993237.9977s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 131072
        (leave) Call to additive_FFT_wrapper       	[0.0294s x1.00]	(1692993238.0271s x0.00 from start)
      (leave) Input consistency                  	[0.0365s x1.00]	(1692993238.0282s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.0351s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.0410s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.0410s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993238.0703s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.0709s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.0768s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.0768s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993238.1060s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.1066s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.1125s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.1125s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993238.1417s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.1423s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993238.1482s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.1482s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.1772s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.1778s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.1837s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.1838s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993238.2129s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.2135s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.2195s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.2195s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.2485s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.2491s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.2550s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.2550s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.2839s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.2845s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.2905s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.2905s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.3194s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.3200s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993238.3260s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.3260s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.3549s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.3555s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.3614s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.3614s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993238.3907s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.3912s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.3971s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.3971s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993238.4260s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.4265s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.4324s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.4324s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0299s x1.00]	(1692993238.4623s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.4630s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993238.4690s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.4690s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.4979s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.4984s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.5044s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.5044s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.5333s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.5339s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.5398s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.5398s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.5687s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.5692s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.5751s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.5751s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.6041s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.6046s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.6105s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.6105s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.6394s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.6399s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.6458s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.6458s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.6748s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.6753s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993238.7040s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.7108s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993238.7167s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.7167s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0293s x1.00]	(1692993238.7460s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.7466s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.7525s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.7525s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993238.7816s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.7822s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.7881s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.7881s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.8170s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.8176s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.8235s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.8235s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.8525s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.8531s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.8590s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.8590s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.8879s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.8885s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.8945s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.8945s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.9234s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.9240s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.9299s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.9299s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993238.9589s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.9595s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993238.9654s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993238.9654s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993238.9944s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993238.9950s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.0009s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.0010s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.0299s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.0304s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.0364s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.0364s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0293s x1.00]	(1692993239.0657s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.0662s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.0722s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.0722s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.1011s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.1016s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.1075s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.1075s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.1364s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.1369s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.1428s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.1428s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.1718s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.1723s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.1782s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.1782s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.2072s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.2077s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.2136s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.2136s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.2426s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.2431s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.2491s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.2491s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.2781s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.2786s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.2845s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.2845s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.3135s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.3140s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.3199s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.3199s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.3489s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.3495s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0288s x1.00]	(1692993239.3782s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.3850s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993239.3910s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.3910s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993239.4201s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.4207s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.4266s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.4266s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993239.4554s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.4560s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.4620s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.4620s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993239.4910s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.4916s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.4975s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.4976s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.5266s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.5272s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.5331s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.5331s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.5620s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.5626s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.5686s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.5686s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993239.5977s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.5983s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.6042s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.6042s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.6332s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.6338s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.6397s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.6398s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993239.6689s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.6695s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.6754s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.6754s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.7044s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.7049s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.7108s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.7109s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993239.7399s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.7404s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.7463s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.7464s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.7753s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.7758s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.7817s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.7817s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993239.8107s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.8113s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.8172s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.8172s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.8461s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.8466s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.8525s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.8525s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.8814s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.8820s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.8879s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.8879s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993239.9168s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.9173s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993239.9233s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.9233s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993239.9521s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.9526s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.9585s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.9586s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993239.9874s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993239.9879s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993239.9938s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993239.9938s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993240.0227s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.0233s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993240.0520s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck C	[2.0610s x1.00]	(1692993240.0521s x0.00 from start)
    (enter) Calculating and submitting response: Rowcheck	[             ]	(1692993240.0521s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.0593s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993240.0880s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.0952s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993240.1239s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.1311s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993240.1598s x0.00 from start)
    (leave) Calculating and submitting response: Rowcheck	[0.1078s x1.00]	(1692993240.1599s x0.00 from start)
  (leave) Calculating and submitting proof   	[6.2913s x1.00]	(1692993240.1599s x0.00 from start)
  (enter) Finish prover round                	[             ]	(1692993240.1599s x0.00 from start)
  (leave) Finish prover round                	[0.0081s x1.00]	(1692993240.1680s x0.00 from start)
  (enter) pow                                	[             ]	(1692993240.1680s x0.00 from start)
  (leave) pow                                	[0.0000s x0.99]	(1692993240.1680s x0.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(1692993240.1680s x0.00 from start)
    (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.1857s x0.00 from start)
      * Vector size: 131072
      * Subspace size: 131072
    (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993240.2144s x0.00 from start)
    (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.2322s x0.00 from start)
      * Vector size: 131072
      * Subspace size: 131072
    (leave) Call to additive_IFFT_wrapper      	[0.0289s x1.00]	(1692993240.2610s x0.00 from start)
    (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993240.2789s x0.00 from start)
      * Vector size: 131072
      * Subspace size: 131072
    (leave) Call to additive_IFFT_wrapper      	[0.0288s x1.00]	(1692993240.3077s x0.00 from start)
    (enter) Finish prover round                	[             ]	(1692993240.3078s x0.00 from start)
    (leave) Finish prover round                	[0.0014s x1.00]	(1692993240.3092s x0.00 from start)
    (enter) pow                                	[             ]	(1692993240.3092s x0.00 from start)
    (leave) pow                                	[0.0000s x1.00]	(1692993240.3092s x0.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.1412s x1.00]	(1692993240.3092s x0.00 from start)
  (enter) Obtain transcript                  	[             ]	(1692993240.3092s x0.00 from start)
  (leave) Obtain transcript                  	[0.0183s x1.00]	(1692993240.3275s x0.00 from start)
  * Total size of proof oracles (bytes): 37748736
  * Total size of Merkle tree (bytes): 8388576
  * Total size of prover state (bytes): 46137312
(leave) Ligero SNARK prover                	[8.6208s x1.00]	(1692993240.3276s x0.00 from start)
(enter) Ligero SNARK verifier              	[             ]	(1692993240.3951s x0.00 from start)

Ligero IOP parameters
  * target security parameter = 128
  * achieved security parameter = -5840.6
  * encoded ligero interactions = 3
  * encoded ligero queries = 192
  * encoded ligero absolute proximity parameter = 16383
  * encoded ligero fractional proximity parameter = 0.124992
  * RS extra dimensions = 2
  * systematic domain dim = 15
  * codeword domain dim = 17
  * num oracles for input = 9
  * num oracle vectors = 9
  * make zk = false
  * domain type = affine subspace

LDT instance reducer parameters
  * soundness type = proven
  * target interactive soundness error (bits) = 130
  * achieved interactive soundness error (bits) = 141.0
  * codeword domain dim = 17
  * max tested degree bound = 32768
  * max constraint degree bound = 32768
  * absolute proximity parameter = 32767
  * fractional proximity parameter = 0.249992
  * num output LDT instances = 3

Direct LDT parameters
  * target query soundness error (bits): 130
  * achieved query soundness error (bits): 130.0
  * codeword domain dimension: 17
  * RS extra dimensions: 2
  * absolute proximity parameter: 16383
  * fractional proximity parameter: 0.124992
  * number of queries: 675

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  num oracles for vectors / R1CS constraints (m_2): 9
  (enter) verifier_seal_interaction_registrations	[             ]	(1692993240.5128s x0.00 from start)
  (leave) verifier_seal_interaction_registrations	[0.5966s x1.00]	(1692993241.1094s x0.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(1692993241.1098s x0.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x0.95]	(1692993241.1098s x0.00 from start)
  (enter) Check verifier predicate           	[             ]	(1692993241.1098s x0.00 from start)
    (enter) Check Interleaved R1CS verifier predicate	[             ]	(1692993241.1098s x0.00 from start)
      (enter) Getting Lagrange coefficients for Lincheck tests	[             ]	(1692993241.1100s x0.00 from start)
      (leave) Getting Lagrange coefficients for Lincheck tests	[0.0987s x1.00]	(1692993241.2087s x0.00 from start)
      (enter) Checking predicate for Lincheck A  	[             ]	(1692993241.2107s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993241.2270s x0.00 from start)
          (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993241.2272s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 32768
          (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993241.2331s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993241.2331s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 131072
          (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993241.2622s x0.00 from start)
        (leave) Input consistency                  	[0.0393s x1.00]	(1692993241.2663s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993241.2669s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993241.2672s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0132s x1.00]	(1692993241.2805s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0136s x1.00]	(1692993241.2806s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993241.3056s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8105s x1.00]	(1692993242.1160s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993242.1161s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993242.1161s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0132s x1.00]	(1692993242.1293s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993242.1294s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993242.1486s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8101s x1.00]	(1692993242.9587s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993242.9587s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993242.9588s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993242.9719s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993242.9720s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993242.9907s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8089s x1.00]	(1692993243.7996s x0.00 from start)
      (leave) Checking predicate for Lincheck A  	[2.5944s x1.00]	(1692993243.8051s x0.00 from start)
      (enter) Checking predicate for Lincheck B  	[             ]	(1692993243.8051s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993243.8210s x0.00 from start)
          (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993243.8211s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 32768
          (leave) Call to additive_IFFT_wrapper      	[0.0061s x1.00]	(1692993243.8272s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993243.8272s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 131072
          (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993243.8563s x0.00 from start)
        (leave) Input consistency                  	[0.0395s x1.00]	(1692993243.8605s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993243.8611s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993243.8615s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0133s x1.00]	(1692993243.8747s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0137s x1.00]	(1692993243.8748s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993243.8961s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8114s x1.00]	(1692993244.7074s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993244.7075s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993244.7075s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993244.7207s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993244.7208s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993244.7402s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8085s x1.00]	(1692993245.5487s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993245.5487s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993245.5488s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993245.5620s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993245.5621s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993245.5813s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8108s x1.00]	(1692993246.3921s x0.00 from start)
      (leave) Checking predicate for Lincheck B  	[2.5923s x1.00]	(1692993246.3974s x0.00 from start)
      (enter) Checking predicate for Lincheck C  	[             ]	(1692993246.3974s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993246.4181s x0.00 from start)
          (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993246.4182s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 32768
          (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993246.4242s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993246.4242s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 131072
          (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993246.4534s x0.00 from start)
        (leave) Input consistency                  	[0.0393s x1.00]	(1692993246.4574s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993246.4581s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993246.4584s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0133s x1.00]	(1692993246.4716s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0137s x1.00]	(1692993246.4717s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993246.4929s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8112s x1.00]	(1692993247.3041s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993247.3041s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993247.3042s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993247.3173s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993247.3174s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993247.3364s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8097s x1.00]	(1692993248.1461s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993248.1461s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993248.1462s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993248.1592s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993248.1593s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993248.1786s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8105s x1.00]	(1692993248.9891s x0.00 from start)
      (leave) Checking predicate for Lincheck C  	[2.5968s x1.00]	(1692993248.9942s x0.00 from start)
      (enter) Checking predicate for Rowcheck    	[             ]	(1692993248.9942s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993248.9949s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993248.9951s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0132s x1.00]	(1692993249.0083s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0136s x1.00]	(1692993249.0084s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993249.0090s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.0862s x1.00]	(1692993249.0952s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993249.0953s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993249.0953s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993249.1084s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0133s x1.00]	(1692993249.1085s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993249.1087s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.0843s x1.00]	(1692993249.1930s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993249.1930s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993249.1931s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0132s x1.00]	(1692993249.2063s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0134s x1.00]	(1692993249.2064s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993249.2066s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.0843s x1.00]	(1692993249.2909s x0.00 from start)
      (leave) Checking predicate for Rowcheck    	[0.2967s x1.00]	(1692993249.2909s x0.00 from start)
    (leave) Check Interleaved R1CS verifier predicate	[8.1843s x1.00]	(1692993249.2941s x0.00 from start)
    (enter) Check LDT verifier predicate       	[             ]	(1692993249.2941s x0.00 from start)
    (leave) Check LDT verifier predicate       	[0.4584s x1.00]	(1692993249.7525s x0.00 from start)
  (leave) Check verifier predicate           	[8.6427s x1.00]	(1692993249.7525s x0.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Ligero SNARK verifier              	[9.3574s x1.00]	(1692993249.7525s x0.00 from start)
(enter) Ligero SNARK prover                	[             ]	(1692993249.8107s x0.00 from start)

Ligero IOP parameters
  * target security parameter = 128
  * achieved security parameter = 124.4
  * encoded ligero interactions = 3
  * encoded ligero queries = 192
  * encoded ligero absolute proximity parameter = 16382
  * encoded ligero fractional proximity parameter = 0.124985
  * RS extra dimensions = 2
  * systematic domain dim = 15
  * codeword domain dim = 17
  * num oracles for input = 9
  * num oracle vectors = 9
  * make zk = true
  * domain type = affine subspace

LDT instance reducer parameters
  * soundness type = proven
  * target interactive soundness error (bits) = 130
  * achieved interactive soundness error (bits) = 141.0
  * codeword domain dim = 17
  * max tested degree bound = 32768
  * max constraint degree bound = 32768
  * absolute proximity parameter = 32767
  * fractional proximity parameter = 0.249992
  * num output LDT instances = 3

Direct LDT parameters
  * target query soundness error (bits): 130
  * achieved query soundness error (bits): 130.0
  * codeword domain dimension: 17
  * RS extra dimensions: 2
  * absolute proximity parameter: 16382
  * fractional proximity parameter: 0.124985
  * number of queries: 675

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  num oracles for vectors / R1CS constraints (m_2): 9
  (enter) Submit witness oracles             	[             ]	(1692993249.9304s x0.00 from start)
    (enter) Generate extended witness and auxiliary witness	[             ]	(1692993249.9305s x0.00 from start)
    (leave) Generate extended witness and auxiliary witness	[0.0004s x1.00]	(1692993249.9309s x0.00 from start)
    (enter) Perform matrix multiplications     	[             ]	(1692993249.9309s x0.00 from start)
    (leave) Perform matrix multiplications     	[0.0231s x1.00]	(1692993249.9540s x0.00 from start)
    (enter) Submit input oracles               	[             ]	(1692993249.9540s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993249.9540s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993249.9599s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993249.9600s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993249.9887s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993249.9888s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993249.9947s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993249.9947s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993250.0235s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.0235s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.0294s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.0294s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993250.0582s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.0582s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.0641s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.0641s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993250.0929s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.0929s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.0988s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.0988s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993250.1275s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.1276s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.1335s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.1335s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993250.1622s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.1623s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.1682s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.1682s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993250.1970s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.1970s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.2030s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.2030s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.2320s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.2320s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.2379s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.2379s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993250.2669s x0.00 from start)
    (leave) Submit input oracles               	[0.3129s x1.00]	(1692993250.2669s x0.00 from start)
    (enter) Submit vector oracles              	[             ]	(1692993250.2669s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.2669s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.2729s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.2729s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.3019s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.3019s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993250.3079s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.3079s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.3369s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.3370s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.3429s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.3429s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.3719s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.3719s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.3778s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.3779s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.4069s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.4069s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.4128s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.4128s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.4418s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.4419s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.4478s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.4478s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.4767s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.4768s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.4827s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.4827s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993250.5118s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.5118s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.5177s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.5177s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.5467s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.5468s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.5527s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.5527s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993250.5818s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.5818s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.5877s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.5877s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993250.6166s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.6167s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.6226s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.6226s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.6516s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.6517s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.6576s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.6576s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.6865s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.6866s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.6925s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.6925s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.7215s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.7215s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.7274s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.7275s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993250.7564s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.7564s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.7623s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.7623s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993250.7913s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.7913s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.7972s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.7972s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.8262s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.8262s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.8322s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.8322s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993250.8611s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.8611s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.8670s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.8671s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0298s x1.00]	(1692993250.8968s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.8969s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.9028s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.9028s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.9318s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.9318s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993250.9377s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.9378s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993250.9667s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993250.9668s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993250.9727s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993250.9727s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.0017s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.0018s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.0077s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.0077s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.0367s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.0367s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.0427s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.0427s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.0717s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.0717s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.0776s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.0776s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.1067s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.1067s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.1126s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.1126s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.1417s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.1417s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.1476s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.1476s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.1766s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.1766s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.1825s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.1825s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993251.2116s x0.00 from start)
    (leave) Submit vector oracles              	[0.9447s x1.00]	(1692993251.2116s x0.00 from start)
  (leave) Submit witness oracles             	[1.2811s x1.00]	(1692993251.2116s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.2220s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.2279s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.2279s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.2566s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.2672s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.2731s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.2731s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.3018s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.3123s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.3183s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.3183s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.3470s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.3471s x0.00 from start)
    * Vector size: 65536
    * Subspace size: 65536
  (leave) Call to additive_IFFT_wrapper      	[0.0131s x1.00]	(1692993251.3602s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.3602s x0.00 from start)
    * Vector size: 65536
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.3889s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.3994s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.4053s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.4053s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.4340s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.4445s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.4504s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.4504s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993251.4793s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.4898s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.4957s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.4957s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.5244s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.5245s x0.00 from start)
    * Vector size: 65536
    * Subspace size: 65536
  (leave) Call to additive_IFFT_wrapper      	[0.0131s x1.00]	(1692993251.5376s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.5376s x0.00 from start)
    * Vector size: 65536
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993251.5664s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.5769s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.5828s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.5828s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.6115s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.6221s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.6280s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.6280s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.6567s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.6672s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 32768
  (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993251.6732s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.6732s x0.00 from start)
    * Vector size: 32768
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.7019s x0.00 from start)
  (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993251.7020s x0.00 from start)
    * Vector size: 65536
    * Subspace size: 65536
  (leave) Call to additive_IFFT_wrapper      	[0.0131s x1.00]	(1692993251.7151s x0.00 from start)
  (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.7151s x0.00 from start)
    * Vector size: 65536
    * Subspace size: 131072
  (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993251.7439s x0.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(1692993251.7439s x0.00 from start)
    (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.7544s x0.00 from start)
      * Vector size: 32768
      * Subspace size: 131072
    (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.7831s x0.00 from start)
    (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.7936s x0.00 from start)
      * Vector size: 32768
      * Subspace size: 131072
    (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993251.8224s x0.00 from start)
    (enter) Call to additive_FFT_wrapper       	[             ]	(1692993251.8328s x0.00 from start)
      * Vector size: 32768
      * Subspace size: 131072
    (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993251.8615s x0.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.1176s x1.00]	(1692993251.8615s x0.00 from start)
  (enter) Finish prover round                	[             ]	(1692993251.8615s x0.00 from start)
    (enter) Construct Merkle tree              	[             ]	(1692993251.8616s x0.00 from start)
      (enter) BCS: Sample randomness             	[             ]	(1692993251.8616s x0.00 from start)
      (leave) BCS: Sample randomness             	[0.0234s x1.00]	(1692993251.8850s x0.00 from start)
    (leave) Construct Merkle tree              	[0.2061s x1.00]	(1692993252.0676s x0.00 from start)
  (leave) Finish prover round                	[0.7899s x1.00]	(1692993252.6514s x0.00 from start)
  (enter) pow                                	[             ]	(1692993252.6514s x0.00 from start)
  (leave) pow                                	[0.0000s x0.92]	(1692993252.6514s x0.00 from start)
  (enter) Calculating and submitting proof   	[             ]	(1692993252.6514s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck A	[             ]	(1692993252.6541s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993252.6560s x0.00 from start)
        (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.6562s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 32768
        (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993252.6622s x0.00 from start)
        (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.6622s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 131072
        (leave) Call to additive_FFT_wrapper       	[0.0293s x1.00]	(1692993252.6915s x0.00 from start)
      (leave) Input consistency                  	[0.0395s x1.00]	(1692993252.6956s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.7036s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993252.7096s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.7096s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0293s x1.00]	(1692993252.7389s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.7395s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.7454s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.7454s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993252.7744s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.7750s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.7809s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.7809s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993252.8098s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.8104s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.8163s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.8163s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993252.8452s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.8458s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.8517s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.8517s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993252.8807s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.8813s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.8872s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.8872s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993252.9163s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.9169s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.9228s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.9228s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993252.9515s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.9521s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0064s x1.00]	(1692993252.9585s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.9585s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993252.9877s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993252.9883s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993252.9942s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993252.9942s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993253.0232s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.0237s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.0296s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.0296s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.0584s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.0589s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.0648s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.0648s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.0937s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.0943s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.1002s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.1002s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.1290s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.1295s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.1354s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.1354s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993253.1644s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.1649s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.1708s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.1708s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.1997s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.2002s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.2061s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.2061s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.2350s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.2355s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.2414s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.2414s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.2703s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.2708s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.2768s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.2768s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.3056s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.3061s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.3120s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.3120s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.3409s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.3416s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993253.3703s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.3771s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.3830s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.3830s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993253.4121s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.4127s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.4186s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.4186s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.4475s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.4481s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.4541s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.4541s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.4829s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.4835s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.4894s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.4895s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.5184s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.5190s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.5248s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.5249s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993253.5539s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.5545s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.5604s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.5604s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.5892s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.5898s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.5958s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.5958s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.6246s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.6252s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.6311s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.6312s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.6601s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.6607s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.6666s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.6666s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.6954s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.6960s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.7019s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.7019s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.7308s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.7313s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.7372s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.7372s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.7660s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.7665s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.7725s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.7725s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993253.8015s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.8020s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.8079s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.8079s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993253.8369s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.8374s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.8433s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.8433s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993253.8723s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.8728s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.8787s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.8787s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.9076s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.9081s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.9141s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.9141s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993253.9429s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.9434s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.9493s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.9493s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993253.9782s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993253.9787s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993253.9846s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993253.9846s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.0136s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.0143s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993254.0431s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.0499s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.0558s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.0558s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.0848s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.0854s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.0913s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.0914s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993254.1205s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.1211s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.1271s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.1271s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993254.1560s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.1566s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.1625s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.1626s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993254.1918s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.1924s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.1983s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.1984s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.2272s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.2278s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.2337s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.2337s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.2627s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.2633s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.2692s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.2692s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.2982s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.2988s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.3047s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.3048s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.3338s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.3344s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.3403s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.3403s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.3693s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.3698s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.3758s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.3758s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993254.4047s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.4052s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.4111s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.4111s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.4399s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.4404s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.4463s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.4463s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.4752s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.4757s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.4816s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.4816s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.5104s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.5109s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.5168s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.5168s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993254.5457s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.5462s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993254.5522s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.5522s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.5811s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.5816s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.5875s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.5875s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.6163s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.6168s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.6227s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.6228s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993254.6517s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.6522s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.6581s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.6581s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993254.6872s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.6879s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993254.7166s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck A	[2.0626s x1.00]	(1692993254.7167s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck B	[             ]	(1692993254.7167s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993254.7173s x0.00 from start)
        (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.7173s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 32768
        (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.7233s x0.00 from start)
        (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.7233s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 131072
        (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.7521s x0.00 from start)
      (leave) Input consistency                  	[0.0359s x1.00]	(1692993254.7532s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.7600s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.7660s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.7660s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993254.7951s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.7957s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.8016s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.8016s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.8304s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.8310s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.8369s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.8370s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993254.8658s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.8664s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.8723s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.8723s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993254.9012s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.9018s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.9077s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.9077s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993254.9366s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.9372s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.9431s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.9431s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993254.9720s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993254.9726s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993254.9785s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993254.9785s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.0072s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.0078s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.0137s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.0138s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993255.0425s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.0431s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.0490s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.0490s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.0780s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.0785s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.0844s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.0844s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.1134s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.1139s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.1198s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.1198s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.1488s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.1493s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993255.1552s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.1553s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.1842s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.1847s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.1906s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.1907s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.2195s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.2200s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.2259s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.2259s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.2549s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.2554s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.2613s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.2613s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.2901s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.2906s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.2966s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.2966s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.3256s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.3261s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.3320s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.3320s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.3609s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.3614s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.3673s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.3673s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.3961s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.3968s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993255.4255s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.4323s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.4383s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.4383s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.4673s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.4679s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.4738s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.4738s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.5027s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.5033s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.5092s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.5092s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.5381s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.5387s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.5446s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.5446s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.5734s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.5741s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.5800s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.5800s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.6089s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.6095s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.6154s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.6154s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.6442s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.6448s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.6507s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.6507s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.6796s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.6802s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.6861s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.6861s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.7149s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.7155s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.7214s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.7214s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993255.7505s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.7510s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.7569s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.7570s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.7858s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.7863s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.7922s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.7923s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.8212s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.8217s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.8276s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.8277s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993255.8566s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.8571s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.8630s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.8630s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.8920s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.8925s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.8984s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.8985s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993255.9272s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.9277s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.9336s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.9336s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993255.9624s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.9629s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993255.9688s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993255.9688s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993255.9979s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993255.9984s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.0043s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.0043s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.0331s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.0336s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.0395s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.0395s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993256.0684s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.0691s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993256.0978s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.1046s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993256.1105s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.1105s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993256.1396s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.1403s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.1462s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.1462s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.1751s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.1757s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.1816s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.1816s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.2106s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.2112s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.2171s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.2171s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.2461s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.2467s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.2526s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.2526s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.2815s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.2821s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.2880s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.2880s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.3170s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.3176s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.3235s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.3235s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.3525s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.3531s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.3590s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.3590s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.3880s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.3886s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.3944s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.3944s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993256.4233s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.4238s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.4297s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.4297s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.4586s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.4591s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.4650s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.4650s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.4940s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.4946s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.5004s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.5005s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.5293s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.5298s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.5357s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.5358s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993256.5648s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.5653s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.5712s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.5713s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.6002s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.6007s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.6066s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.6066s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.6355s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.6360s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.6420s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.6420s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.6709s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.6714s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.6773s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.6773s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993256.7061s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.7066s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.7125s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.7126s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.7415s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.7422s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993256.7709s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck B	[2.0543s x1.00]	(1692993256.7710s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck C	[             ]	(1692993256.7710s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993256.7716s x0.00 from start)
        (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.7716s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 32768
        (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993256.7776s x0.00 from start)
        (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.7776s x0.00 from start)
          * Vector size: 32768
          * Subspace size: 131072
        (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.8065s x0.00 from start)
      (leave) Input consistency                  	[0.0361s x1.00]	(1692993256.8076s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.8145s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.8204s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.8204s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993256.8496s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.8502s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.8561s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.8561s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993256.8851s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.8857s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.8916s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.8916s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.9205s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.9211s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.9270s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.9270s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993256.9561s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.9567s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.9627s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.9627s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993256.9916s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993256.9922s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993256.9981s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993256.9981s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.0269s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.0275s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.0335s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.0335s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.0624s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.0630s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.0688s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.0689s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993257.0979s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.0985s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.1044s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.1044s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.1332s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.1338s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.1397s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.1397s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0298s x1.00]	(1692993257.1695s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.1702s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.1761s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.1761s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.2050s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.2055s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.2114s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.2114s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.2403s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.2408s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.2467s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.2468s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.2756s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.2761s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.2820s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.2821s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993257.3111s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.3116s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.3175s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.3175s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.3464s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.3469s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.3529s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.3529s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.3817s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.3822s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.3882s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.3882s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993257.4172s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.4177s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.4236s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.4237s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993257.4527s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.4534s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993257.4822s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.4889s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993257.4949s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.4949s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993257.5239s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.5245s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.5305s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.5305s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.5593s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.5599s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.5657s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.5658s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.5947s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.5953s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.6012s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.6012s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.6300s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.6306s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.6365s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.6366s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.6654s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.6660s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.6719s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.6719s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993257.7009s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.7015s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.7074s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.7074s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.7362s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.7368s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.7427s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.7427s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.7716s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.7722s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.7781s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.7781s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.8070s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.8075s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.8134s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.8134s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993257.8422s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.8427s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.8486s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.8486s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993257.8774s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.8779s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.8838s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.8838s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993257.9127s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.9132s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.9191s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.9191s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0287s x1.00]	(1692993257.9479s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.9484s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.9543s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.9543s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993257.9833s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993257.9838s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993257.9897s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993257.9897s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0290s x1.00]	(1692993258.0187s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.0192s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.0251s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.0251s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.0540s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.0545s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.0604s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.0604s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.0892s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.0898s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.0957s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.0957s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.1245s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.1253s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993258.1540s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.1608s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.1667s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.1667s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993258.1958s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.1964s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.2024s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.2024s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.2312s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.2318s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.2376s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.2377s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.2665s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.2671s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.2730s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.2730s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.3018s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.3024s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.3083s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.3083s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.3373s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.3379s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.3438s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.3438s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.3727s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.3733s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.3792s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.3793s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.4082s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.4088s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.4147s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.4147s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.4435s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.4441s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.4501s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.4501s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.4790s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.4795s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993258.4855s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.4855s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.5143s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.5148s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.5207s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.5207s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0292s x1.00]	(1692993258.5499s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.5504s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.5563s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.5564s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.5852s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.5857s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.5916s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.5916s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.6206s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.6211s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.6270s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.6270s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.6559s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.6564s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993258.6624s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.6624s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.6912s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.6917s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.6976s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.6976s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.7265s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.7270s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0059s x1.00]	(1692993258.7330s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.7330s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0288s x1.00]	(1692993258.7617s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.7623s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 32768
      (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993258.7682s x0.00 from start)
      (enter) Call to additive_FFT_wrapper       	[             ]	(1692993258.7682s x0.00 from start)
        * Vector size: 32768
        * Subspace size: 131072
      (leave) Call to additive_FFT_wrapper       	[0.0289s x1.00]	(1692993258.7971s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.7978s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993258.8266s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck C	[2.0556s x1.00]	(1692993258.8266s x0.00 from start)
    (enter) Calculating and submitting response: Rowcheck	[             ]	(1692993258.8266s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.8340s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993258.8628s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.8702s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0288s x1.00]	(1692993258.8990s x0.00 from start)
      (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.9064s x0.00 from start)
        * Vector size: 131072
        * Subspace size: 131072
      (leave) Call to additive_IFFT_wrapper      	[0.0288s x1.00]	(1692993258.9352s x0.00 from start)
    (leave) Calculating and submitting response: Rowcheck	[0.1086s x1.00]	(1692993258.9352s x0.00 from start)
  (leave) Calculating and submitting proof   	[6.2838s x1.00]	(1692993258.9353s x0.00 from start)
  (enter) Finish prover round                	[             ]	(1692993258.9353s x0.00 from start)
  (leave) Finish prover round                	[0.0081s x1.00]	(1692993258.9434s x0.00 from start)
  (enter) pow                                	[             ]	(1692993258.9434s x0.00 from start)
  (leave) pow                                	[0.0000s x0.84]	(1692993258.9434s x0.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(1692993258.9434s x0.00 from start)
    (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993258.9617s x0.00 from start)
      * Vector size: 131072
      * Subspace size: 131072
    (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993258.9904s x0.00 from start)
    (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993259.0086s x0.00 from start)
      * Vector size: 131072
      * Subspace size: 131072
    (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993259.0373s x0.00 from start)
    (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993259.0555s x0.00 from start)
      * Vector size: 131072
      * Subspace size: 131072
    (leave) Call to additive_IFFT_wrapper      	[0.0287s x1.00]	(1692993259.0842s x0.00 from start)
    (enter) Finish prover round                	[             ]	(1692993259.0842s x0.00 from start)
    (leave) Finish prover round                	[0.0015s x1.00]	(1692993259.0857s x0.00 from start)
    (enter) pow                                	[             ]	(1692993259.0857s x0.00 from start)
    (leave) pow                                	[0.0000s x0.99]	(1692993259.0857s x0.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.1423s x1.00]	(1692993259.0857s x0.00 from start)
  (enter) Obtain transcript                  	[             ]	(1692993259.0857s x0.00 from start)
  (leave) Obtain transcript                  	[0.0213s x1.00]	(1692993259.1071s x0.00 from start)
  * Total size of proof oracles (bytes): 53477376
  * Total size of Merkle tree (bytes): 8388576
  * Total size of prover state (bytes): 61865952
(leave) Ligero SNARK prover                	[9.2964s x1.00]	(1692993259.1071s x0.00 from start)
(enter) Ligero SNARK verifier              	[             ]	(1692993259.1709s x0.00 from start)

Ligero IOP parameters
  * target security parameter = 128
  * achieved security parameter = 124.4
  * encoded ligero interactions = 3
  * encoded ligero queries = 192
  * encoded ligero absolute proximity parameter = 16382
  * encoded ligero fractional proximity parameter = 0.124985
  * RS extra dimensions = 2
  * systematic domain dim = 15
  * codeword domain dim = 17
  * num oracles for input = 9
  * num oracle vectors = 9
  * make zk = true
  * domain type = affine subspace

LDT instance reducer parameters
  * soundness type = proven
  * target interactive soundness error (bits) = 130
  * achieved interactive soundness error (bits) = 141.0
  * codeword domain dim = 17
  * max tested degree bound = 32768
  * max constraint degree bound = 32768
  * absolute proximity parameter = 32767
  * fractional proximity parameter = 0.249992
  * num output LDT instances = 3

Direct LDT parameters
  * target query soundness error (bits): 130
  * achieved query soundness error (bits): 130.0
  * codeword domain dimension: 17
  * RS extra dimensions: 2
  * absolute proximity parameter: 16382
  * fractional proximity parameter: 0.124985
  * number of queries: 675

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  num oracles for vectors / R1CS constraints (m_2): 9
  (enter) verifier_seal_interaction_registrations	[             ]	(1692993259.2804s x0.00 from start)
  (leave) verifier_seal_interaction_registrations	[0.5972s x1.00]	(1692993259.8776s x0.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(1692993259.8780s x0.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.02]	(1692993259.8780s x0.00 from start)
  (enter) Check verifier predicate           	[             ]	(1692993259.8780s x0.00 from start)
    (enter) Check Interleaved R1CS verifier predicate	[             ]	(1692993259.8780s x0.00 from start)
      (enter) Getting Lagrange coefficients for Lincheck tests	[             ]	(1692993259.8783s x0.00 from start)
      (leave) Getting Lagrange coefficients for Lincheck tests	[0.0906s x1.00]	(1692993259.9689s x0.00 from start)
      (enter) Checking predicate for Lincheck A  	[             ]	(1692993259.9696s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993259.9754s x0.00 from start)
          (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993259.9756s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 32768
          (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993259.9816s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993259.9816s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 131072
          (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993260.0107s x0.00 from start)
        (leave) Input consistency                  	[0.0398s x1.00]	(1692993260.0152s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993260.0159s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993260.0162s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0132s x1.00]	(1692993260.0294s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0136s x1.00]	(1692993260.0295s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993260.0502s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8130s x1.00]	(1692993260.8632s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993260.8633s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993260.8633s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993260.8765s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993260.8766s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993260.8951s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8105s x1.00]	(1692993261.7056s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993261.7056s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993261.7057s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993261.7188s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993261.7189s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993261.7381s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8097s x1.00]	(1692993262.5478s x0.00 from start)
      (leave) Checking predicate for Lincheck A  	[2.5826s x1.00]	(1692993262.5522s x0.00 from start)
      (enter) Checking predicate for Lincheck B  	[             ]	(1692993262.5522s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993262.5651s x0.00 from start)
          (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993262.5653s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 32768
          (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993262.5713s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993262.5713s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 131072
          (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993262.6004s x0.00 from start)
        (leave) Input consistency                  	[0.0393s x1.00]	(1692993262.6044s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993262.6051s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993262.6054s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0133s x1.00]	(1692993262.6187s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0137s x1.00]	(1692993262.6188s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993262.6399s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8124s x1.00]	(1692993263.4523s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993263.4524s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993263.4524s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993263.4655s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993263.4656s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993263.4847s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8093s x1.00]	(1692993264.2940s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993264.2940s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993264.2941s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993264.3072s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0133s x1.00]	(1692993264.3073s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993264.3264s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8096s x1.00]	(1692993265.1359s x0.00 from start)
      (leave) Checking predicate for Lincheck B  	[2.5879s x1.00]	(1692993265.1401s x0.00 from start)
      (enter) Checking predicate for Lincheck C  	[             ]	(1692993265.1401s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993265.1530s x0.00 from start)
          (enter) Call to additive_IFFT_wrapper      	[             ]	(1692993265.1532s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 32768
          (leave) Call to additive_IFFT_wrapper      	[0.0060s x1.00]	(1692993265.1592s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993265.1592s x0.00 from start)
            * Vector size: 32768
            * Subspace size: 131072
          (leave) Call to additive_FFT_wrapper       	[0.0291s x1.00]	(1692993265.1883s x0.00 from start)
        (leave) Input consistency                  	[0.0393s x1.00]	(1692993265.1923s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993265.1930s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993265.1933s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0132s x1.00]	(1692993265.2065s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0136s x1.00]	(1692993265.2066s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993265.2277s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8116s x1.00]	(1692993266.0393s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993266.0393s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993266.0394s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0130s x1.00]	(1692993266.0524s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0132s x1.00]	(1692993266.0525s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993266.0709s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8090s x1.00]	(1692993266.8799s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993266.8799s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993266.8800s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993266.8931s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0132s x1.00]	(1692993266.8932s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993266.9122s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.8096s x1.00]	(1692993267.7218s x0.00 from start)
      (leave) Checking predicate for Lincheck C  	[2.5860s x1.00]	(1692993267.7261s x0.00 from start)
      (enter) Checking predicate for Rowcheck    	[             ]	(1692993267.7261s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993267.7266s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993267.7266s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993267.7397s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0133s x1.00]	(1692993267.7399s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993267.7401s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.0863s x1.00]	(1692993267.8264s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993267.8264s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993267.8265s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993267.8396s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0133s x1.00]	(1692993267.8397s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993267.8399s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.0844s x1.00]	(1692993267.9243s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993267.9243s x0.00 from start)
          (enter) Call to additive_FFT_wrapper       	[             ]	(1692993267.9244s x0.00 from start)
            * Vector size: 65536
            * Subspace size: 65536
          (leave) Call to additive_FFT_wrapper       	[0.0131s x1.00]	(1692993267.9375s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0133s x1.00]	(1692993267.9376s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993267.9377s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.0844s x1.00]	(1692993268.0222s x0.00 from start)
      (leave) Checking predicate for Rowcheck    	[0.2961s x1.00]	(1692993268.0222s x0.00 from start)
    (leave) Check Interleaved R1CS verifier predicate	[8.1442s x1.00]	(1692993268.0222s x0.00 from start)
    (enter) Check LDT verifier predicate       	[             ]	(1692993268.0223s x0.00 from start)
    (leave) Check LDT verifier predicate       	[0.4603s x1.00]	(1692993268.4826s x0.00 from start)
  (leave) Check verifier predicate           	[8.6045s x1.00]	(1692993268.4826s x0.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Ligero SNARK verifier              	[9.3117s x1.00]	(1692993268.4826s x0.00 from start)
[       OK ] InterleavedR1CSSnarkTest.SimpleTest (37129 ms)
[----------] 1 test from InterleavedR1CSSnarkTest (37129 ms total)

[----------] 1 test from InterleavedR1CSSnarkMultiplicativeTest
[ RUN      ] InterleavedR1CSSnarkMultiplicativeTest.SimpleTest
(enter) Ligero SNARK prover                	[             ]	(1692993270.7805s x0.00 from start)

Ligero IOP parameters
  * target security parameter = 128
  * achieved security parameter = 124.4
  * encoded ligero interactions = 1
  * encoded ligero queries = 192
  * encoded ligero absolute proximity parameter = 16382
  * encoded ligero fractional proximity parameter = 0.124985
  * RS extra dimensions = 2
  * systematic domain dim = 15
  * codeword domain dim = 17
  * num oracles for input = 9
  * num oracle vectors = 9
  * make zk = true
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = proven
  * target interactive soundness error (bits) = 130
  * achieved interactive soundness error (bits) = 236.0
  * codeword domain dim = 17
  * max tested degree bound = 32768
  * max constraint degree bound = 32768
  * absolute proximity parameter = 32767
  * fractional proximity parameter = 0.249992
  * num output LDT instances = 1

Direct LDT parameters
  * target query soundness error (bits): 130
  * achieved query soundness error (bits): 130.0
  * codeword domain dimension: 17
  * RS extra dimensions: 2
  * absolute proximity parameter: 16382
  * fractional proximity parameter: 0.124985
  * number of queries: 675

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  num oracles for vectors / R1CS constraints (m_2): 9
  (enter) Submit witness oracles             	[             ]	(1692993270.9110s x0.00 from start)
    (enter) Generate extended witness and auxiliary witness	[             ]	(1692993270.9110s x0.00 from start)
    (leave) Generate extended witness and auxiliary witness	[0.0027s x1.00]	(1692993270.9138s x0.00 from start)
    (enter) Perform matrix multiplications     	[             ]	(1692993270.9138s x0.00 from start)
    (leave) Perform matrix multiplications     	[0.0917s x1.00]	(1692993271.0054s x0.00 from start)
    (enter) Submit input oracles               	[             ]	(1692993271.0055s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.0056s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0653s x0.46]	(1692993271.0709s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.0710s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0637s x1.00]	(1692993271.1347s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.1348s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993271.1646s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.1646s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993271.2247s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.2248s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993271.2545s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.2546s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993271.3145s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.3146s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993271.3443s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.3444s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0601s x1.00]	(1692993271.4045s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.4046s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993271.4343s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.4344s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993271.4944s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.4945s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993271.5242s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.5242s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0601s x1.00]	(1692993271.5843s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.5845s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993271.6142s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.6142s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993271.6741s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.6743s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993271.7040s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.7041s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0602s x1.00]	(1692993271.7643s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.7644s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993271.7940s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.7940s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993271.8539s x0.00 from start)
    (leave) Submit input oracles               	[0.8484s x0.96]	(1692993271.8539s x0.00 from start)
    (enter) Submit vector oracles              	[             ]	(1692993271.8539s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.8540s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993271.8835s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.8836s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993271.9436s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993271.9437s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993271.9732s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993271.9733s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993272.0332s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.0333s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.0629s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.0632s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993272.1230s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.1231s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.1526s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.1528s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993272.2128s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.2129s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.2424s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.2425s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993272.3023s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.3024s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.3320s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.3320s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993272.3919s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.3920s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.4215s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.4216s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993272.4814s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.4816s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.5111s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.5112s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993272.5712s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.5714s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.6008s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.6009s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993272.6608s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.6610s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.6905s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.6906s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993272.7505s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.7506s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.7801s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.7802s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993272.8400s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.8402s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.8697s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.8698s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993272.9296s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993272.9297s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993272.9592s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993272.9593s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.0192s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.0193s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.0488s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.0489s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.1088s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.1089s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.1384s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.1385s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.1983s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.1985s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993273.2280s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.2282s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.2880s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.2881s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.3176s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.3177s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0597s x1.00]	(1692993273.3774s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.3775s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.4070s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.4071s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993273.4670s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.4671s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.4966s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.4967s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.5566s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.5567s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.5862s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.5863s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.6461s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.6463s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.6757s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.6758s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.7356s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.7357s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0294s x1.00]	(1692993273.7652s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.7653s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993273.8252s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.8253s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.8548s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.8549s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993273.9147s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993273.9148s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993273.9444s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993273.9445s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993274.0043s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993274.0044s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0287s x1.00]	(1692993274.0331s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993274.0333s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993274.0931s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993274.0932s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0287s x1.00]	(1692993274.1220s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993274.1220s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993274.1820s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993274.1821s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0288s x1.00]	(1692993274.2109s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993274.2110s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993274.2708s x0.00 from start)
    (leave) Submit vector oracles              	[2.4169s x1.00]	(1692993274.2708s x0.00 from start)
  (leave) Submit witness oracles             	[3.3598s x0.99]	(1692993274.2708s x0.00 from start)
  (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993274.4699s x0.00 from start)
    * Vector size: 32768
    * Coset size: 32768
  (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993274.4994s x0.00 from start)
  (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993274.4995s x0.00 from start)
    * Vector size: 32768
    * Subgroup size: 131072
  (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993274.5584s x0.00 from start)
  (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993274.7575s x0.00 from start)
    * Vector size: 32768
    * Coset size: 32768
  (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993274.7870s x0.00 from start)
  (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993274.7871s x0.00 from start)
    * Vector size: 32768
    * Subgroup size: 131072
  (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993274.8460s x0.00 from start)
  (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993275.0448s x0.00 from start)
    * Vector size: 32768
    * Coset size: 32768
  (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993275.0743s x0.00 from start)
  (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993275.0744s x0.00 from start)
    * Vector size: 32768
    * Subgroup size: 131072
  (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993275.1334s x0.00 from start)
  (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993275.1338s x0.00 from start)
    * Vector size: 65536
    * Coset size: 65536
  (leave) Call to multiplicative_IFFT_wrapper	[0.0549s x1.00]	(1692993275.1887s x0.00 from start)
  (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993275.1889s x0.00 from start)
    * Vector size: 65536
    * Subgroup size: 131072
  (leave) Call to multiplicative_FFT_wrapper 	[0.0636s x1.00]	(1692993275.2525s x0.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(1692993275.2527s x0.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993275.4515s x0.00 from start)
      * Vector size: 32768
      * Subgroup size: 131072
    (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993275.5105s x0.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.2578s x1.00]	(1692993275.5105s x0.00 from start)
  (enter) Finish prover round                	[             ]	(1692993275.5105s x0.00 from start)
    (enter) Construct Merkle tree              	[             ]	(1692993275.5106s x0.00 from start)
      (enter) BCS: Sample randomness             	[             ]	(1692993275.5106s x0.00 from start)
      (leave) BCS: Sample randomness             	[0.0222s x1.00]	(1692993275.5328s x0.00 from start)
    (leave) Construct Merkle tree              	[0.3380s x1.00]	(1692993275.8486s x0.00 from start)
  (leave) Finish prover round                	[0.6049s x1.00]	(1692993276.1154s x0.00 from start)
  (enter) pow                                	[             ]	(1692993276.1155s x0.00 from start)
  (leave) pow                                	[0.0000s x0.94]	(1692993276.1155s x0.00 from start)
  (enter) Calculating and submitting proof   	[             ]	(1692993276.1155s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck A	[             ]	(1692993276.1207s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993276.1235s x0.00 from start)
        (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.1238s x0.00 from start)
          * Vector size: 32768
          * Coset size: 32768
        (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993276.1533s x0.00 from start)
        (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.1535s x0.00 from start)
          * Vector size: 32768
          * Subgroup size: 131072
        (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993276.2133s x0.00 from start)
      (leave) Input consistency                  	[0.1042s x1.00]	(1692993276.2277s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.2512s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0299s x1.00]	(1692993276.2810s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.2813s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0596s x1.00]	(1692993276.3409s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.3483s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993276.3779s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.3780s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993276.4370s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.4451s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993276.4747s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.4748s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993276.5338s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.5419s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993276.5716s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.5717s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993276.6307s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.6388s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993276.6685s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.6686s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993276.7276s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.7357s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993276.7654s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.7655s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993276.8244s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.8325s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993276.8621s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.8622s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993276.9212s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993276.9293s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993276.9590s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993276.9591s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993277.0180s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.0261s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993277.0558s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.0559s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.1149s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.1229s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993277.1526s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.1527s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.2117s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.2200s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993277.2497s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.2498s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.3087s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.3166s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993277.3463s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.3464s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.4053s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.4132s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993277.4429s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.4430s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.5019s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.5098s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993277.5395s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.5396s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.5986s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.6065s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993277.6362s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.6363s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993277.6953s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.7032s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0298s x1.00]	(1692993277.7330s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.7331s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.7921s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.8000s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993277.8296s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.8297s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.8887s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.8966s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0288s x1.00]	(1692993277.9254s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993277.9255s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993277.9845s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993277.9934s x0.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.1230s x1.00]	(1692993278.1164s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck A	[1.9968s x1.00]	(1692993278.1175s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck B	[             ]	(1692993278.1175s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993278.1184s x0.00 from start)
        (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.1185s x0.00 from start)
          * Vector size: 32768
          * Coset size: 32768
        (leave) Call to multiplicative_IFFT_wrapper	[0.0293s x1.00]	(1692993278.1478s x0.00 from start)
        (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.1479s x0.00 from start)
          * Vector size: 32768
          * Subgroup size: 131072
        (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993278.2070s x0.00 from start)
      (leave) Input consistency                  	[0.0923s x1.00]	(1692993278.2107s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.2303s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993278.2600s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.2601s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993278.3192s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.3266s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993278.3563s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.3564s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993278.4153s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.4234s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993278.4530s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.4531s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993278.5121s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.5202s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993278.5499s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.5500s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993278.6089s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.6170s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0298s x1.00]	(1692993278.6468s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.6469s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993278.7058s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.7139s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993278.7436s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.7437s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993278.8027s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.8108s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993278.8405s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.8406s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993278.8995s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993278.9076s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993278.9372s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993278.9373s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993278.9963s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.0044s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.0341s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.0342s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.0931s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.1011s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.1308s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.1309s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.1898s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.1981s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.2277s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.2278s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.2868s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.2947s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.3244s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.3245s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.3834s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.3913s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.4209s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.4210s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.4800s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.4879s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.5176s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.5176s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.5766s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.5845s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.6142s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.6143s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.6732s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.6810s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.7107s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.7108s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993279.7698s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.7777s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993279.8073s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.8074s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993279.8664s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.8743s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0288s x1.00]	(1692993279.9031s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993279.9032s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0588s x1.00]	(1692993279.9621s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993279.9710s x0.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.1229s x1.00]	(1692993280.0938s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck B	[1.9776s x1.00]	(1692993280.0951s x0.00 from start)
    (enter) Calculating and submitting response: Lincheck C	[             ]	(1692993280.0951s x0.00 from start)
      (enter) Input consistency                  	[             ]	(1692993280.0959s x0.00 from start)
        (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.0961s x0.00 from start)
          * Vector size: 32768
          * Coset size: 32768
        (leave) Call to multiplicative_IFFT_wrapper	[0.0294s x1.00]	(1692993280.1255s x0.00 from start)
        (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.1256s x0.00 from start)
          * Vector size: 32768
          * Subgroup size: 131072
        (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993280.1846s x0.00 from start)
      (leave) Input consistency                  	[0.0923s x1.00]	(1692993280.1883s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.2082s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.2378s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.2379s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993280.2970s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.3044s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.3341s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.3341s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993280.3930s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.4012s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.4308s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.4309s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993280.4898s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.4979s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.5276s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.5277s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993280.5867s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.5948s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.6245s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.6246s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993280.6835s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.6916s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.7212s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.7214s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0592s x1.00]	(1692993280.7805s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.7886s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.8183s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.8184s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993280.8773s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.8854s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993280.9151s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993280.9152s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993280.9741s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993280.9822s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993281.0118s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.0119s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.0710s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.0790s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993281.1087s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.1088s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.1678s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.1760s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993281.2057s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.2058s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.2648s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.2727s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993281.3024s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.3025s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.3614s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.3693s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993281.3990s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.3991s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993281.4580s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.4660s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993281.4956s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.4957s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.5547s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.5626s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993281.5922s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.5923s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.6513s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.6592s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993281.6889s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.6890s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993281.7479s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.7558s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993281.7855s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.7856s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993281.8445s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.8524s x0.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0274s x1.00]	(1692993281.8799s x0.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993281.8800s x0.00 from start)
        * Vector size: 32768
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0589s x1.00]	(1692993281.9389s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993281.9478s x0.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.1227s x1.00]	(1692993282.0705s x0.00 from start)
    (leave) Calculating and submitting response: Lincheck C	[1.9764s x1.00]	(1692993282.0714s x0.00 from start)
    (enter) Calculating and submitting response: Rowcheck	[             ]	(1692993282.0714s x0.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993282.1906s x0.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.1231s x1.00]	(1692993282.3137s x0.00 from start)
    (leave) Calculating and submitting response: Rowcheck	[0.2427s x1.00]	(1692993282.3141s x0.00 from start)
  (leave) Calculating and submitting proof   	[6.1987s x1.00]	(1692993282.3141s x0.00 from start)
  (enter) Finish prover round                	[             ]	(1692993282.3142s x0.00 from start)
  (leave) Finish prover round                	[0.0103s x1.00]	(1692993282.3245s x0.00 from start)
  (enter) pow                                	[             ]	(1692993282.3245s x0.00 from start)
  (leave) pow                                	[0.0000s x0.95]	(1692993282.3245s x0.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(1692993282.3245s x0.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993282.5646s x0.00 from start)
      * Vector size: 131072
      * Coset size: 131072
    (leave) Call to multiplicative_IFFT_wrapper	[0.1218s x1.00]	(1692993282.6865s x0.00 from start)
    (enter) Finish prover round                	[             ]	(1692993282.6868s x0.00 from start)
    (leave) Finish prover round                	[0.0019s x1.00]	(1692993282.6887s x0.00 from start)
    (enter) pow                                	[             ]	(1692993282.6887s x0.00 from start)
    (leave) pow                                	[0.0000s x0.99]	(1692993282.6887s x0.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.3642s x1.00]	(1692993282.6887s x0.00 from start)
  (enter) Obtain transcript                  	[             ]	(1692993282.6887s x0.00 from start)
  (leave) Obtain transcript                  	[0.0193s x1.00]	(1692993282.7080s x0.00 from start)
  * Total size of proof oracles (bytes): 171966464
  * Total size of Merkle tree (bytes): 8388576
  * Total size of prover state (bytes): 180355040
(leave) Ligero SNARK prover                	[11.9275s x1.00]	(1692993282.7080s x0.00 from start)
(enter) Ligero SNARK verifier              	[             ]	(1692993282.7790s x0.00 from start)

Ligero IOP parameters
  * target security parameter = 128
  * achieved security parameter = 124.4
  * encoded ligero interactions = 1
  * encoded ligero queries = 192
  * encoded ligero absolute proximity parameter = 16382
  * encoded ligero fractional proximity parameter = 0.124985
  * RS extra dimensions = 2
  * systematic domain dim = 15
  * codeword domain dim = 17
  * num oracles for input = 9
  * num oracle vectors = 9
  * make zk = true
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = proven
  * target interactive soundness error (bits) = 130
  * achieved interactive soundness error (bits) = 236.0
  * codeword domain dim = 17
  * max tested degree bound = 32768
  * max constraint degree bound = 32768
  * absolute proximity parameter = 32767
  * fractional proximity parameter = 0.249992
  * num output LDT instances = 1

Direct LDT parameters
  * target query soundness error (bits): 130
  * achieved query soundness error (bits): 130.0
  * codeword domain dimension: 17
  * RS extra dimensions: 2
  * absolute proximity parameter: 16382
  * fractional proximity parameter: 0.124985
  * number of queries: 675

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  num oracles for vectors / R1CS constraints (m_2): 9
  (enter) verifier_seal_interaction_registrations	[             ]	(1692993282.8939s x0.00 from start)
  (leave) verifier_seal_interaction_registrations	[0.2831s x1.00]	(1692993283.1771s x0.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(1692993283.1775s x0.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.03]	(1692993283.1775s x0.00 from start)
  (enter) Check verifier predicate           	[             ]	(1692993283.1775s x0.00 from start)
    (enter) Check Interleaved R1CS verifier predicate	[             ]	(1692993283.1775s x0.00 from start)
      (enter) Getting Lagrange coefficients for Lincheck tests	[             ]	(1692993283.1785s x0.00 from start)
      (leave) Getting Lagrange coefficients for Lincheck tests	[0.0051s x1.00]	(1692993283.1836s x0.00 from start)
      (enter) Checking predicate for Lincheck A  	[             ]	(1692993283.1843s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993283.1850s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.1852s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0291s x1.00]	(1692993283.2143s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.2144s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0636s x1.00]	(1692993283.2779s x0.00 from start)
        (leave) Input consistency                  	[0.0968s x1.00]	(1692993283.2818s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993283.2822s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.2825s x0.00 from start)
            * Vector size: 65536
            * Subgroup size: 65536
          (leave) Call to multiplicative_FFT_wrapper 	[0.0391s x1.00]	(1692993283.3216s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0400s x1.00]	(1692993283.3222s x0.00 from start)
        (enter) Precomputing for consistency tests 	[             ]	(1692993283.3414s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.3416s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993283.3713s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.3714s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993283.4305s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.4306s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993283.4602s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.4603s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0593s x1.00]	(1692993283.5196s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.5197s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993283.5494s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.5495s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0592s x1.00]	(1692993283.6087s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.6088s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993283.6385s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.6386s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0592s x1.00]	(1692993283.6978s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.6979s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993283.7275s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.7276s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993283.7866s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.7867s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993283.8163s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.8164s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0601s x1.00]	(1692993283.8765s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.8766s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993283.9063s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.9063s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993283.9662s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993283.9663s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993283.9959s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993283.9960s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993284.0560s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.0562s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.0858s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.0859s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993284.1457s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.1457s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.1753s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.1754s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0605s x1.00]	(1692993284.2359s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.2360s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.2656s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.2657s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993284.3255s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.3256s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993284.3553s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.3554s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993284.4154s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.4155s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.4450s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.4451s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993284.5050s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.5051s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.5347s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.5348s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993284.5947s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.5948s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.6244s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.6245s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993284.6846s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.6847s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.7142s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.7143s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993284.7742s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.7743s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993284.8039s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.8040s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993284.8639s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993284.8640s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0288s x1.00]	(1692993284.8928s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993284.8930s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993284.9528s x0.00 from start)
        (leave) Precomputing for consistency tests 	[1.6114s x1.00]	(1692993284.9528s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993284.9528s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.7502s x1.00]	(1692993285.7030s x0.00 from start)
      (leave) Checking predicate for Lincheck A  	[2.5217s x1.00]	(1692993285.7060s x0.00 from start)
      (enter) Checking predicate for Lincheck B  	[             ]	(1692993285.7060s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993285.7068s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993285.7070s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0293s x1.00]	(1692993285.7363s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993285.7364s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993285.7955s x0.00 from start)
        (leave) Input consistency                  	[0.0924s x1.00]	(1692993285.7992s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993285.7996s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993285.8000s x0.00 from start)
            * Vector size: 65536
            * Subgroup size: 65536
          (leave) Call to multiplicative_FFT_wrapper 	[0.0366s x1.00]	(1692993285.8366s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0375s x1.00]	(1692993285.8371s x0.00 from start)
        (enter) Precomputing for consistency tests 	[             ]	(1692993285.8574s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993285.8575s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993285.8872s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993285.8873s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993285.9464s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993285.9465s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993285.9762s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993285.9762s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0592s x1.00]	(1692993286.0354s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.0355s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.0652s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.0652s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993286.1244s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.1245s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.1541s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.1542s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0592s x1.00]	(1692993286.2134s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.2136s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.2431s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.2432s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993286.3023s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.3024s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993286.3321s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.3322s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993286.3922s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.3923s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.4219s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.4220s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993286.4818s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.4820s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.5116s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.5117s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993286.5717s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.5718s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993286.6015s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.6016s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993286.6615s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.6616s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993286.6911s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.6912s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993286.7511s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.7512s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.7808s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.7809s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993286.8408s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.8409s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.8706s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.8707s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993286.9306s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993286.9306s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993286.9603s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993286.9604s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993287.0202s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993287.0203s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993287.0499s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993287.0500s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0602s x1.00]	(1692993287.1102s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993287.1103s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993287.1399s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993287.1400s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993287.1999s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993287.2000s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993287.2296s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993287.2297s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993287.2896s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993287.2897s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993287.3193s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993287.3194s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993287.3792s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993287.3793s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0288s x1.00]	(1692993287.4080s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993287.4081s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993287.4682s x0.00 from start)
        (leave) Precomputing for consistency tests 	[1.6108s x1.00]	(1692993287.4682s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993287.4682s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.7510s x1.00]	(1692993288.2192s x0.00 from start)
      (leave) Checking predicate for Lincheck B  	[2.5165s x1.00]	(1692993288.2225s x0.00 from start)
      (enter) Checking predicate for Lincheck C  	[             ]	(1692993288.2225s x0.00 from start)
        (enter) Input consistency                  	[             ]	(1692993288.2233s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.2235s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0292s x1.00]	(1692993288.2527s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.2528s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993288.3119s x0.00 from start)
        (leave) Input consistency                  	[0.0929s x1.00]	(1692993288.3163s x0.00 from start)
        (enter) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[             ]	(1692993288.3167s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.3170s x0.00 from start)
            * Vector size: 65536
            * Subgroup size: 65536
          (leave) Call to multiplicative_FFT_wrapper 	[0.0370s x1.00]	(1692993288.3540s x0.00 from start)
        (leave) Lincheck: equality test (p_0 sums to 0 over systematic domain)	[0.0379s x1.00]	(1692993288.3546s x0.00 from start)
        (enter) Precomputing for consistency tests 	[             ]	(1692993288.3751s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.3752s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993288.4049s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.4050s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993288.4641s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.4642s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993288.4938s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.4939s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993288.5530s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.5531s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993288.5828s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.5829s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0590s x1.00]	(1692993288.6419s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.6420s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993288.6717s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.6717s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0592s x1.00]	(1692993288.7309s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.7310s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0295s x1.00]	(1692993288.7606s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.7607s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0591s x1.00]	(1692993288.8198s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.8199s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993288.8496s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.8497s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993288.9097s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.9098s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993288.9394s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993288.9395s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993288.9995s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993288.9996s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.0292s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.0293s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993289.0892s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.0893s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.1190s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.1191s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993289.1791s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.1792s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.2088s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.2089s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993289.2688s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.2689s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0294s x1.00]	(1692993289.2983s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.2984s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0596s x1.00]	(1692993289.3580s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.3581s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.3877s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.3878s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0601s x1.00]	(1692993289.4479s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.4480s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.4776s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.4777s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0600s x1.00]	(1692993289.5376s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.5377s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0297s x1.00]	(1692993289.5673s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.5674s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993289.6273s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.6274s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.6570s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.6571s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993289.7169s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.7170s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.7467s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.7468s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993289.8067s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.8068s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0296s x1.00]	(1692993289.8363s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.8364s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0598s x1.00]	(1692993289.8962s x0.00 from start)
          (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1692993289.8963s x0.00 from start)
            * Vector size: 32768
            * Coset size: 32768
          (leave) Call to multiplicative_IFFT_wrapper	[0.0275s x1.00]	(1692993289.9238s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993289.9239s x0.00 from start)
            * Vector size: 32768
            * Subgroup size: 131072
          (leave) Call to multiplicative_FFT_wrapper 	[0.0599s x1.00]	(1692993289.9838s x0.00 from start)
        (leave) Precomputing for consistency tests 	[1.6088s x1.00]	(1692993289.9838s x0.00 from start)
        (enter) Lincheck: querying and performing consistency tests	[             ]	(1692993289.9839s x0.00 from start)
        (leave) Lincheck: querying and performing consistency tests	[0.7532s x1.00]	(1692993290.7370s x0.00 from start)
      (leave) Checking predicate for Lincheck C  	[2.5175s x1.00]	(1692993290.7400s x0.00 from start)
      (enter) Checking predicate for Rowcheck    	[             ]	(1692993290.7400s x0.00 from start)
        (enter) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[             ]	(1692993290.7403s x0.00 from start)
          (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1692993290.7406s x0.00 from start)
            * Vector size: 65536
            * Subgroup size: 65536
          (leave) Call to multiplicative_FFT_wrapper 	[0.0325s x1.00]	(1692993290.7731s x0.00 from start)
        (leave) Rowcheck: equality test (p_0 equals 0 within systematic domain)	[0.0343s x1.00]	(1692993290.7746s x0.00 from start)
        (enter) Rowcheck: querying and performing consistency tests	[             ]	(1692993290.7753s x0.00 from start)
        (leave) Rowcheck: querying and performing consistency tests	[0.5522s x1.00]	(1692993291.3275s x0.00 from start)
      (leave) Checking predicate for Rowcheck    	[0.5876s x1.00]	(1692993291.3276s x0.00 from start)
    (leave) Check Interleaved R1CS verifier predicate	[8.1501s x1.00]	(1692993291.3276s x0.00 from start)
    (enter) Check LDT verifier predicate       	[             ]	(1692993291.3276s x0.00 from start)
    (leave) Check LDT verifier predicate       	[0.9752s x1.00]	(1692993292.3027s x0.00 from start)
  (leave) Check verifier predicate           	[9.1253s x1.00]	(1692993292.3027s x0.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Ligero SNARK verifier              	[9.5237s x1.00]	(1692993292.3028s x0.00 from start)
[       OK ] InterleavedR1CSSnarkMultiplicativeTest.SimpleTest (23834 ms)
[----------] 1 test from InterleavedR1CSSnarkMultiplicativeTest (23834 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 2 test cases ran. (60963 ms total)
[  PASSED  ] 2 tests.
Removing intermediate container 1be22d156bff
 ---> 103b1e65d326
Successfully built 103b1e65d326
Successfully tagged ligero:latest
